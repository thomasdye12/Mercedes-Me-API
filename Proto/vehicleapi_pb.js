// source: vehicleapi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var acp_pb = require('./acp_pb.js');
goog.object.extend(proto, acp_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var github_com_gogo_protobuf_gogoproto_gogo_pb = require('./github.com/gogo/protobuf/gogoproto/gogo_pb.js');
goog.object.extend(proto, github_com_gogo_protobuf_gogoproto_gogo_pb);
goog.exportSymbol('proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN', null, global);
goog.exportSymbol('proto.proto.AppTwinCommandStatus', null, global);
goog.exportSymbol('proto.proto.AppTwinCommandStatusUpdatesByPID', null, global);
goog.exportSymbol('proto.proto.AppTwinCommandStatusUpdatesByVIN', null, global);
goog.exportSymbol('proto.proto.AppTwinPendingCommandsRequest', null, global);
goog.exportSymbol('proto.proto.AppTwinPendingCommandsResponse', null, global);
goog.exportSymbol('proto.proto.PendingCommand', null, global);
goog.exportSymbol('proto.proto.VehicleAPIAttributeStatus', null, global);
goog.exportSymbol('proto.proto.VehicleAPICommandGetResult', null, global);
goog.exportSymbol('proto.proto.VehicleAPICommandPostResult', null, global);
goog.exportSymbol('proto.proto.VehicleAPICommandProcessStatus', null, global);
goog.exportSymbol('proto.proto.VehicleAPIDataGetResult', null, global);
goog.exportSymbol('proto.proto.VehicleAPIError', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.displayName = 'proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AppTwinCommandStatusUpdatesByVIN, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AppTwinCommandStatusUpdatesByVIN.displayName = 'proto.proto.AppTwinCommandStatusUpdatesByVIN';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AppTwinCommandStatusUpdatesByPID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AppTwinCommandStatusUpdatesByPID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AppTwinCommandStatusUpdatesByPID.displayName = 'proto.proto.AppTwinCommandStatusUpdatesByPID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AppTwinCommandStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.AppTwinCommandStatus.repeatedFields_, null);
};
goog.inherits(proto.proto.AppTwinCommandStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AppTwinCommandStatus.displayName = 'proto.proto.AppTwinCommandStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAPICommandPostResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.VehicleAPICommandPostResult.repeatedFields_, null);
};
goog.inherits(proto.proto.VehicleAPICommandPostResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAPICommandPostResult.displayName = 'proto.proto.VehicleAPICommandPostResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAPICommandGetResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.VehicleAPICommandGetResult.repeatedFields_, null);
};
goog.inherits(proto.proto.VehicleAPICommandGetResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAPICommandGetResult.displayName = 'proto.proto.VehicleAPICommandGetResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAPIDataGetResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VehicleAPIDataGetResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAPIDataGetResult.displayName = 'proto.proto.VehicleAPIDataGetResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAPIAttributeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VehicleAPIAttributeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAPIAttributeStatus.displayName = 'proto.proto.VehicleAPIAttributeStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAPICommandProcessStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.VehicleAPICommandProcessStatus.repeatedFields_, null);
};
goog.inherits(proto.proto.VehicleAPICommandProcessStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAPICommandProcessStatus.displayName = 'proto.proto.VehicleAPICommandProcessStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAPIError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.VehicleAPIError.repeatedFields_, null);
};
goog.inherits(proto.proto.VehicleAPIError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAPIError.displayName = 'proto.proto.VehicleAPIError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AppTwinPendingCommandsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AppTwinPendingCommandsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AppTwinPendingCommandsRequest.displayName = 'proto.proto.AppTwinPendingCommandsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AppTwinPendingCommandsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.AppTwinPendingCommandsResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.AppTwinPendingCommandsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AppTwinPendingCommandsResponse.displayName = 'proto.proto.AppTwinPendingCommandsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PendingCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.PendingCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.PendingCommand.displayName = 'proto.proto.PendingCommand';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN}
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN;
  return proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN}
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN} returns this
 */
proto.proto.AcknowledgeAppTwinCommandStatusUpdatesByVIN.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AppTwinCommandStatusUpdatesByVIN.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AppTwinCommandStatusUpdatesByVIN} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updatesByVinMap: (f = msg.getUpdatesByVinMap()) ? f.toObject(includeInstance, proto.proto.AppTwinCommandStatusUpdatesByPID.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByVIN}
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AppTwinCommandStatusUpdatesByVIN;
  return proto.proto.AppTwinCommandStatusUpdatesByVIN.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AppTwinCommandStatusUpdatesByVIN} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByVIN}
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = msg.getUpdatesByVinMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.proto.AppTwinCommandStatusUpdatesByPID.deserializeBinaryFromReader, "", new proto.proto.AppTwinCommandStatusUpdatesByPID());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AppTwinCommandStatusUpdatesByVIN.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AppTwinCommandStatusUpdatesByVIN} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUpdatesByVinMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.proto.AppTwinCommandStatusUpdatesByPID.serializeBinaryToWriter);
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByVIN} returns this
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, AppTwinCommandStatusUpdatesByPID> updates_by_vin = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.proto.AppTwinCommandStatusUpdatesByPID>}
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.prototype.getUpdatesByVinMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.proto.AppTwinCommandStatusUpdatesByPID>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.proto.AppTwinCommandStatusUpdatesByPID));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByVIN} returns this
 */
proto.proto.AppTwinCommandStatusUpdatesByVIN.prototype.clearUpdatesByVinMap = function() {
  this.getUpdatesByVinMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AppTwinCommandStatusUpdatesByPID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AppTwinCommandStatusUpdatesByPID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    updatesByPidMap: (f = msg.getUpdatesByPidMap()) ? f.toObject(includeInstance, proto.proto.AppTwinCommandStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByPID}
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AppTwinCommandStatusUpdatesByPID;
  return proto.proto.AppTwinCommandStatusUpdatesByPID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AppTwinCommandStatusUpdatesByPID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByPID}
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    case 2:
      var value = msg.getUpdatesByPidMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readMessage, proto.proto.AppTwinCommandStatus.deserializeBinaryFromReader, 0, new proto.proto.AppTwinCommandStatus());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AppTwinCommandStatusUpdatesByPID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AppTwinCommandStatusUpdatesByPID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpdatesByPidMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeMessage, proto.proto.AppTwinCommandStatus.serializeBinaryToWriter);
  }
};


/**
 * optional string vin = 1;
 * @return {string}
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByPID} returns this
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<int64, AppTwinCommandStatus> updates_by_pid = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.proto.AppTwinCommandStatus>}
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.prototype.getUpdatesByPidMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.proto.AppTwinCommandStatus>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.proto.AppTwinCommandStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.AppTwinCommandStatusUpdatesByPID} returns this
 */
proto.proto.AppTwinCommandStatusUpdatesByPID.prototype.clearUpdatesByPidMap = function() {
  this.getUpdatesByPidMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.AppTwinCommandStatus.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AppTwinCommandStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AppTwinCommandStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AppTwinCommandStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinCommandStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    processId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestampInMs: jspb.Message.getFieldWithDefault(msg, 3, 0),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.proto.VehicleAPIError.toObject, includeInstance),
    blockingTimeSeconds: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pinAttempts: jspb.Message.getFieldWithDefault(msg, 6, 0),
    type: jspb.Message.getFieldWithDefault(msg, 7, 0),
    state: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AppTwinCommandStatus}
 */
proto.proto.AppTwinCommandStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AppTwinCommandStatus;
  return proto.proto.AppTwinCommandStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AppTwinCommandStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AppTwinCommandStatus}
 */
proto.proto.AppTwinCommandStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcessId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampInMs(value);
      break;
    case 4:
      var value = new proto.proto.VehicleAPIError;
      reader.readMessage(value,proto.proto.VehicleAPIError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockingTimeSeconds(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPinAttempts(value);
      break;
    case 7:
      var value = /** @type {!proto.proto.ACP.CommandType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {!proto.proto.VehicleAPI.CommandState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AppTwinCommandStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AppTwinCommandStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AppTwinCommandStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinCommandStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.proto.VehicleAPIError.serializeBinaryToWriter
    );
  }
  f = message.getBlockingTimeSeconds();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPinAttempts();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional int64 process_id = 1;
 * @return {number}
 */
proto.proto.AppTwinCommandStatus.prototype.getProcessId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.setProcessId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string request_id = 2;
 * @return {string}
 */
proto.proto.AppTwinCommandStatus.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp_in_ms = 3;
 * @return {number}
 */
proto.proto.AppTwinCommandStatus.prototype.getTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.setTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated VehicleAPIError errors = 4;
 * @return {!Array<!proto.proto.VehicleAPIError>}
 */
proto.proto.AppTwinCommandStatus.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.proto.VehicleAPIError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.VehicleAPIError, 4));
};


/**
 * @param {!Array<!proto.proto.VehicleAPIError>} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
*/
proto.proto.AppTwinCommandStatus.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.proto.VehicleAPIError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.VehicleAPIError}
 */
proto.proto.AppTwinCommandStatus.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.proto.VehicleAPIError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional int64 blocking_time_seconds = 5;
 * @return {number}
 */
proto.proto.AppTwinCommandStatus.prototype.getBlockingTimeSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.setBlockingTimeSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 pin_attempts = 6;
 * @return {number}
 */
proto.proto.AppTwinCommandStatus.prototype.getPinAttempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.setPinAttempts = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional ACP.CommandType type = 7;
 * @return {!proto.proto.ACP.CommandType}
 */
proto.proto.AppTwinCommandStatus.prototype.getType = function() {
  return /** @type {!proto.proto.ACP.CommandType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.proto.ACP.CommandType} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional VehicleAPI.CommandState state = 8;
 * @return {!proto.proto.VehicleAPI.CommandState}
 */
proto.proto.AppTwinCommandStatus.prototype.getState = function() {
  return /** @type {!proto.proto.VehicleAPI.CommandState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.proto.VehicleAPI.CommandState} value
 * @return {!proto.proto.AppTwinCommandStatus} returns this
 */
proto.proto.AppTwinCommandStatus.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.VehicleAPICommandPostResult.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAPICommandPostResult.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAPICommandPostResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAPICommandPostResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPICommandPostResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    processId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.proto.VehicleAPIError.toObject, includeInstance),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAPICommandPostResult}
 */
proto.proto.VehicleAPICommandPostResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAPICommandPostResult;
  return proto.proto.VehicleAPICommandPostResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAPICommandPostResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAPICommandPostResult}
 */
proto.proto.VehicleAPICommandPostResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcessId(value);
      break;
    case 2:
      var value = new proto.proto.VehicleAPIError;
      reader.readMessage(value,proto.proto.VehicleAPIError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 3:
      var value = /** @type {!proto.proto.VehicleAPI.CommandState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAPICommandPostResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAPICommandPostResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAPICommandPostResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPICommandPostResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.VehicleAPIError.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int64 process_id = 1;
 * @return {number}
 */
proto.proto.VehicleAPICommandPostResult.prototype.getProcessId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAPICommandPostResult} returns this
 */
proto.proto.VehicleAPICommandPostResult.prototype.setProcessId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated VehicleAPIError errors = 2;
 * @return {!Array<!proto.proto.VehicleAPIError>}
 */
proto.proto.VehicleAPICommandPostResult.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.proto.VehicleAPIError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.VehicleAPIError, 2));
};


/**
 * @param {!Array<!proto.proto.VehicleAPIError>} value
 * @return {!proto.proto.VehicleAPICommandPostResult} returns this
*/
proto.proto.VehicleAPICommandPostResult.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.VehicleAPIError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.VehicleAPIError}
 */
proto.proto.VehicleAPICommandPostResult.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.VehicleAPIError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.VehicleAPICommandPostResult} returns this
 */
proto.proto.VehicleAPICommandPostResult.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional VehicleAPI.CommandState state = 3;
 * @return {!proto.proto.VehicleAPI.CommandState}
 */
proto.proto.VehicleAPICommandPostResult.prototype.getState = function() {
  return /** @type {!proto.proto.VehicleAPI.CommandState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.proto.VehicleAPI.CommandState} value
 * @return {!proto.proto.VehicleAPICommandPostResult} returns this
 */
proto.proto.VehicleAPICommandPostResult.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.VehicleAPICommandGetResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAPICommandGetResult.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAPICommandGetResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAPICommandGetResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPICommandGetResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    processList: jspb.Message.toObjectList(msg.getProcessList(),
    proto.proto.VehicleAPICommandProcessStatus.toObject, includeInstance),
    queueCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    queueType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAPICommandGetResult}
 */
proto.proto.VehicleAPICommandGetResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAPICommandGetResult;
  return proto.proto.VehicleAPICommandGetResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAPICommandGetResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAPICommandGetResult}
 */
proto.proto.VehicleAPICommandGetResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.VehicleAPICommandProcessStatus;
      reader.readMessage(value,proto.proto.VehicleAPICommandProcessStatus.deserializeBinaryFromReader);
      msg.addProcess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQueueCount(value);
      break;
    case 3:
      var value = /** @type {!proto.proto.VehicleAPI.QueueType} */ (reader.readEnum());
      msg.setQueueType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAPICommandGetResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAPICommandGetResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAPICommandGetResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPICommandGetResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.VehicleAPICommandProcessStatus.serializeBinaryToWriter
    );
  }
  f = message.getQueueCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQueueType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * repeated VehicleAPICommandProcessStatus process = 1;
 * @return {!Array<!proto.proto.VehicleAPICommandProcessStatus>}
 */
proto.proto.VehicleAPICommandGetResult.prototype.getProcessList = function() {
  return /** @type{!Array<!proto.proto.VehicleAPICommandProcessStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.VehicleAPICommandProcessStatus, 1));
};


/**
 * @param {!Array<!proto.proto.VehicleAPICommandProcessStatus>} value
 * @return {!proto.proto.VehicleAPICommandGetResult} returns this
*/
proto.proto.VehicleAPICommandGetResult.prototype.setProcessList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.VehicleAPICommandProcessStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.VehicleAPICommandProcessStatus}
 */
proto.proto.VehicleAPICommandGetResult.prototype.addProcess = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.VehicleAPICommandProcessStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.VehicleAPICommandGetResult} returns this
 */
proto.proto.VehicleAPICommandGetResult.prototype.clearProcessList = function() {
  return this.setProcessList([]);
};


/**
 * optional int32 queue_count = 2;
 * @return {number}
 */
proto.proto.VehicleAPICommandGetResult.prototype.getQueueCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAPICommandGetResult} returns this
 */
proto.proto.VehicleAPICommandGetResult.prototype.setQueueCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional VehicleAPI.QueueType queue_type = 3;
 * @return {!proto.proto.VehicleAPI.QueueType}
 */
proto.proto.VehicleAPICommandGetResult.prototype.getQueueType = function() {
  return /** @type {!proto.proto.VehicleAPI.QueueType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.proto.VehicleAPI.QueueType} value
 * @return {!proto.proto.VehicleAPICommandGetResult} returns this
 */
proto.proto.VehicleAPICommandGetResult.prototype.setQueueType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAPIDataGetResult.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAPIDataGetResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAPIDataGetResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPIDataGetResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, proto.proto.VehicleAPIAttributeStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAPIDataGetResult}
 */
proto.proto.VehicleAPIDataGetResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAPIDataGetResult;
  return proto.proto.VehicleAPIDataGetResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAPIDataGetResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAPIDataGetResult}
 */
proto.proto.VehicleAPIDataGetResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.proto.VehicleAPIAttributeStatus.deserializeBinaryFromReader, "", new proto.proto.VehicleAPIAttributeStatus());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAPIDataGetResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAPIDataGetResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAPIDataGetResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPIDataGetResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.proto.VehicleAPIAttributeStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, VehicleAPIAttributeStatus> data = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.proto.VehicleAPIAttributeStatus>}
 */
proto.proto.VehicleAPIDataGetResult.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.proto.VehicleAPIAttributeStatus>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.proto.VehicleAPIAttributeStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.VehicleAPIDataGetResult} returns this
 */
proto.proto.VehicleAPIDataGetResult.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAPIAttributeStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAPIAttributeStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAPIAttributeStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPIAttributeStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    timestampInMs: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAPIAttributeStatus}
 */
proto.proto.VehicleAPIAttributeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAPIAttributeStatus;
  return proto.proto.VehicleAPIAttributeStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAPIAttributeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAPIAttributeStatus}
 */
proto.proto.VehicleAPIAttributeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampInMs(value);
      break;
    case 1:
      var value = /** @type {!proto.proto.VehicleAPI.AttributeStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAPIAttributeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAPIAttributeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAPIAttributeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPIAttributeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional google.protobuf.Value value = 3;
 * @return {?proto.google.protobuf.Value}
 */
proto.proto.VehicleAPIAttributeStatus.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 3));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.proto.VehicleAPIAttributeStatus} returns this
*/
proto.proto.VehicleAPIAttributeStatus.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAPIAttributeStatus} returns this
 */
proto.proto.VehicleAPIAttributeStatus.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAPIAttributeStatus.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 timestamp_in_ms = 2;
 * @return {number}
 */
proto.proto.VehicleAPIAttributeStatus.prototype.getTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAPIAttributeStatus} returns this
 */
proto.proto.VehicleAPIAttributeStatus.prototype.setTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional VehicleAPI.AttributeStatus Status = 1;
 * @return {!proto.proto.VehicleAPI.AttributeStatus}
 */
proto.proto.VehicleAPIAttributeStatus.prototype.getStatus = function() {
  return /** @type {!proto.proto.VehicleAPI.AttributeStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.proto.VehicleAPI.AttributeStatus} value
 * @return {!proto.proto.VehicleAPIAttributeStatus} returns this
 */
proto.proto.VehicleAPIAttributeStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.VehicleAPICommandProcessStatus.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAPICommandProcessStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAPICommandProcessStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPICommandProcessStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.proto.VehicleAPIError.toObject, includeInstance),
    instanceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    processId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    responseParameters: (f = msg.getResponseParameters()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timestampInS: jspb.Message.getFieldWithDefault(msg, 8, 0),
    trackingId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAPICommandProcessStatus}
 */
proto.proto.VehicleAPICommandProcessStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAPICommandProcessStatus;
  return proto.proto.VehicleAPICommandProcessStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAPICommandProcessStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAPICommandProcessStatus}
 */
proto.proto.VehicleAPICommandProcessStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.VehicleAPIError;
      reader.readMessage(value,proto.proto.VehicleAPIError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcessId(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setResponseParameters(value);
      break;
    case 7:
      var value = /** @type {!proto.proto.VehicleAPI.CommandState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampInS(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrackingId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAPICommandProcessStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAPICommandProcessStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPICommandProcessStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.VehicleAPIError.serializeBinaryToWriter
    );
  }
  f = message.getInstanceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProcessId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getResponseParameters();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getTimestampInS();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getTrackingId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * repeated VehicleAPIError errors = 1;
 * @return {!Array<!proto.proto.VehicleAPIError>}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.proto.VehicleAPIError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.VehicleAPIError, 1));
};


/**
 * @param {!Array<!proto.proto.VehicleAPIError>} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
*/
proto.proto.VehicleAPICommandProcessStatus.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.VehicleAPIError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.VehicleAPIError}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.VehicleAPIError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional string instance_id = 2;
 * @return {string}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.setInstanceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 process_id = 4;
 * @return {number}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getProcessId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.setProcessId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Value response_parameters = 6;
 * @return {?proto.google.protobuf.Value}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getResponseParameters = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 6));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
*/
proto.proto.VehicleAPICommandProcessStatus.prototype.setResponseParameters = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.clearResponseParameters = function() {
  return this.setResponseParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.hasResponseParameters = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional VehicleAPI.CommandState state = 7;
 * @return {!proto.proto.VehicleAPI.CommandState}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getState = function() {
  return /** @type {!proto.proto.VehicleAPI.CommandState} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.proto.VehicleAPI.CommandState} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional int64 timestamp_in_s = 8;
 * @return {number}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getTimestampInS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.setTimestampInS = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string tracking_id = 9;
 * @return {string}
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.getTrackingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAPICommandProcessStatus} returns this
 */
proto.proto.VehicleAPICommandProcessStatus.prototype.setTrackingId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.VehicleAPIError.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAPIError.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAPIError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAPIError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPIError.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    subErrorsList: jspb.Message.toObjectList(msg.getSubErrorsList(),
    proto.proto.VehicleAPIError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAPIError}
 */
proto.proto.VehicleAPIError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAPIError;
  return proto.proto.VehicleAPIError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAPIError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAPIError}
 */
proto.proto.VehicleAPIError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    case 4:
      var value = new proto.proto.VehicleAPIError;
      reader.readMessage(value,proto.proto.VehicleAPIError.deserializeBinaryFromReader);
      msg.addSubErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAPIError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAPIError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAPIError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPIError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getSubErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.proto.VehicleAPIError.serializeBinaryToWriter
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.proto.VehicleAPIError.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAPIError} returns this
 */
proto.proto.VehicleAPIError.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.proto.VehicleAPIError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAPIError} returns this
 */
proto.proto.VehicleAPIError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, google.protobuf.Value> attributes = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.proto.VehicleAPIError.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.VehicleAPIError} returns this
 */
proto.proto.VehicleAPIError.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};


/**
 * repeated VehicleAPIError sub_errors = 4;
 * @return {!Array<!proto.proto.VehicleAPIError>}
 */
proto.proto.VehicleAPIError.prototype.getSubErrorsList = function() {
  return /** @type{!Array<!proto.proto.VehicleAPIError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.VehicleAPIError, 4));
};


/**
 * @param {!Array<!proto.proto.VehicleAPIError>} value
 * @return {!proto.proto.VehicleAPIError} returns this
*/
proto.proto.VehicleAPIError.prototype.setSubErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.proto.VehicleAPIError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.VehicleAPIError}
 */
proto.proto.VehicleAPIError.prototype.addSubErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.proto.VehicleAPIError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.VehicleAPIError} returns this
 */
proto.proto.VehicleAPIError.prototype.clearSubErrorsList = function() {
  return this.setSubErrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AppTwinPendingCommandsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AppTwinPendingCommandsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AppTwinPendingCommandsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinPendingCommandsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AppTwinPendingCommandsRequest}
 */
proto.proto.AppTwinPendingCommandsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AppTwinPendingCommandsRequest;
  return proto.proto.AppTwinPendingCommandsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AppTwinPendingCommandsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AppTwinPendingCommandsRequest}
 */
proto.proto.AppTwinPendingCommandsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AppTwinPendingCommandsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AppTwinPendingCommandsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AppTwinPendingCommandsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinPendingCommandsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.AppTwinPendingCommandsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AppTwinPendingCommandsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AppTwinPendingCommandsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AppTwinPendingCommandsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinPendingCommandsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pendingCommandsList: jspb.Message.toObjectList(msg.getPendingCommandsList(),
    proto.proto.PendingCommand.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AppTwinPendingCommandsResponse}
 */
proto.proto.AppTwinPendingCommandsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AppTwinPendingCommandsResponse;
  return proto.proto.AppTwinPendingCommandsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AppTwinPendingCommandsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AppTwinPendingCommandsResponse}
 */
proto.proto.AppTwinPendingCommandsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.PendingCommand;
      reader.readMessage(value,proto.proto.PendingCommand.deserializeBinaryFromReader);
      msg.addPendingCommands(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AppTwinPendingCommandsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AppTwinPendingCommandsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AppTwinPendingCommandsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AppTwinPendingCommandsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPendingCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.PendingCommand.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PendingCommand pending_commands = 1;
 * @return {!Array<!proto.proto.PendingCommand>}
 */
proto.proto.AppTwinPendingCommandsResponse.prototype.getPendingCommandsList = function() {
  return /** @type{!Array<!proto.proto.PendingCommand>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.PendingCommand, 1));
};


/**
 * @param {!Array<!proto.proto.PendingCommand>} value
 * @return {!proto.proto.AppTwinPendingCommandsResponse} returns this
*/
proto.proto.AppTwinPendingCommandsResponse.prototype.setPendingCommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.PendingCommand=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.PendingCommand}
 */
proto.proto.AppTwinPendingCommandsResponse.prototype.addPendingCommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.PendingCommand, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.AppTwinPendingCommandsResponse} returns this
 */
proto.proto.AppTwinPendingCommandsResponse.prototype.clearPendingCommandsList = function() {
  return this.setPendingCommandsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PendingCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PendingCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PendingCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PendingCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    processId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    requestId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PendingCommand}
 */
proto.proto.PendingCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PendingCommand;
  return proto.proto.PendingCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PendingCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PendingCommand}
 */
proto.proto.PendingCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProcessId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 4:
      var value = /** @type {!proto.proto.ACP.CommandType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PendingCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PendingCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PendingCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PendingCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProcessId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string vin = 1;
 * @return {string}
 */
proto.proto.PendingCommand.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.PendingCommand} returns this
 */
proto.proto.PendingCommand.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 process_id = 2;
 * @return {number}
 */
proto.proto.PendingCommand.prototype.getProcessId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.PendingCommand} returns this
 */
proto.proto.PendingCommand.prototype.setProcessId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string request_id = 3;
 * @return {string}
 */
proto.proto.PendingCommand.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.PendingCommand} returns this
 */
proto.proto.PendingCommand.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ACP.CommandType type = 4;
 * @return {!proto.proto.ACP.CommandType}
 */
proto.proto.PendingCommand.prototype.getType = function() {
  return /** @type {!proto.proto.ACP.CommandType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.proto.ACP.CommandType} value
 * @return {!proto.proto.PendingCommand} returns this
 */
proto.proto.PendingCommand.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


goog.object.extend(exports, proto.proto);
