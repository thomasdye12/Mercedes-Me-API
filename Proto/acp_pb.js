// source: acp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_gogo_protobuf_gogoproto_gogo_pb = require('./github.com/gogo/protobuf/gogoproto/gogo_pb.js');
goog.object.extend(proto, github_com_gogo_protobuf_gogoproto_gogo_pb);
goog.exportSymbol('proto.proto.ACP', null, global);
goog.exportSymbol('proto.proto.ACP.CommandType', null, global);
goog.exportSymbol('proto.proto.VVA', null, global);
goog.exportSymbol('proto.proto.VVA.CommandCondition', null, global);
goog.exportSymbol('proto.proto.VVA.CommandState', null, global);
goog.exportSymbol('proto.proto.VehicleAPI', null, global);
goog.exportSymbol('proto.proto.VehicleAPI.AttributeStatus', null, global);
goog.exportSymbol('proto.proto.VehicleAPI.CommandState', null, global);
goog.exportSymbol('proto.proto.VehicleAPI.QueueType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VVA = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VVA, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VVA.displayName = 'proto.proto.VVA';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAPI = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VehicleAPI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAPI.displayName = 'proto.proto.VehicleAPI';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ACP = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ACP, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ACP.displayName = 'proto.proto.ACP';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VVA.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VVA.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VVA} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VVA.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VVA}
 */
proto.proto.VVA.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VVA;
  return proto.proto.VVA.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VVA} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VVA}
 */
proto.proto.VVA.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VVA.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VVA.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VVA} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VVA.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.proto.VVA.CommandState = {
  UNKNOWN_COMMAND_STATE: 0,
  CREATED: 1010,
  ENQUEUED: 1016,
  PROCESSING: 1012,
  SUSPENDED: 1017,
  FINISHED: 1018
};

/**
 * @enum {number}
 */
proto.proto.VVA.CommandCondition = {
  UNKNWON_COMMAND_CONDITION: 0,
  NONE: 1000,
  ACCEPTED: 1001,
  REJECTED: 1002,
  TERMINATE: 1003,
  SUCCESS: 1011,
  FAILED: 1013,
  OVERWRITTEN: 1014,
  TIMEOUT: 1015
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAPI.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAPI.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAPI} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPI.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAPI}
 */
proto.proto.VehicleAPI.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAPI;
  return proto.proto.VehicleAPI.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAPI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAPI}
 */
proto.proto.VehicleAPI.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAPI.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAPI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAPI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAPI.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.proto.VehicleAPI.CommandState = {
  UNKNOWN_COMMAND_STATE: 0,
  INITIATION: 1,
  ENQUEUED: 2,
  PROCESSING: 3,
  WAITING: 4,
  FINISHED: 5,
  FAILED: 6
};

/**
 * @enum {number}
 */
proto.proto.VehicleAPI.AttributeStatus = {
  VALUE_SET: 0,
  VALUE_NOT_SET: 1,
  INVALID: 3,
  NOT_AVAILABLE: 4
};

/**
 * @enum {number}
 */
proto.proto.VehicleAPI.QueueType = {
  UNKNOWNCOMMANDQUEUETYPE: 0,
  DOORS: 10,
  AUXHEAT: 11,
  PRECOND: 12,
  CHARGEOPT: 13,
  MAINTENANCE: 14,
  TCU: 15,
  FEED: 16,
  SERVICEACTIVATION: 17,
  ATP: 18,
  ASSISTANCE: 19,
  RACP: 20,
  WEEKPROFILE: 21,
  REMOTEDIAGNOSIS: 22,
  FLSH: 23,
  TEMPERATURE: 24,
  TRIPCOMP: 25,
  ENGINE: 26,
  THEFTALARM: 27,
  WINDOW: 28,
  HEADUNIT: 29,
  MECALL: 31,
  IMMOBILIZER: 32,
  RENTALSIGNAL: 33,
  BCF: 34,
  PLUGANDCHARGE: 35,
  CARSHARINGMODULE: 36,
  BATTERY: 37,
  ONBOARDFENCES: 38,
  SPEEDFENCES: 39,
  CHARGINGTARIFFS: 40,
  RTMCONFIG: 41,
  MAINTENANCECOMPUTER: 42,
  MECALL2: 43,
  AUTOMATEDVALETPARKING: 44,
  CHARGECONTROL: 45,
  SPEEDALERT: 46
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ACP.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ACP.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ACP} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ACP.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ACP}
 */
proto.proto.ACP.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ACP;
  return proto.proto.ACP.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ACP} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ACP}
 */
proto.proto.ACP.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ACP.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ACP.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ACP} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ACP.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.proto.ACP.CommandType = {
  UNKNOWNCOMMANDTYPE: 0,
  DOORSLOCK: 100,
  DOORSUNLOCK: 110,
  TRUNKUNLOCK: 115,
  FUELFLAPUNLOCK: 116,
  CHARGEFLAPUNLOCK: 117,
  CHARGECOUPLERUNLOCK: 118,
  DOORSPREPARERENTAL: 120,
  DOORSSECUREVEHICLE: 130,
  AUXHEATSTART: 300,
  AUXHEATSTOP: 310,
  AUXHEATCONFIGURE: 320,
  TEMPERATURECONFIGURE: 350,
  WEEKPROFILECONFIGURE: 360,
  WEEKPROFILEV2CONFIGURE: 370,
  PRECONDSTART: 400,
  PRECONDSTOP: 410,
  PRECONDCONFIGURE: 420,
  PRECONDCONFIGURESEATS: 425,
  CHARGEOPTCONFIGURE: 430,
  CHARGEOPTSTART: 440,
  CHARGEOPTSTOP: 450,
  FEEDPOI: 500,
  FEEDFREETEXT: 510,
  ENGINESTART: 550,
  ENGINESTOP: 560,
  ENGINEAVPSTART: 570,
  TCUWAKEUP: 600,
  TCUSWUPDATE: 610,
  TCURCSRESET: 620,
  TCUINTERROGATION: 630,
  SPEEDALERTSTART: 710,
  SPEEDALERTSTOP: 720,
  FLSHSTART: 750,
  FLSHSTOP: 760,
  SIGPOSSTART: 770,
  CONTRACTCONFIGURE: 800,
  CONTRACTREMOVE: 810,
  ROOTCONFIGURE: 820,
  ROOTREMOVE: 830,
  TRIPCOMP: 850,
  MAINTENANCECONFIGURE: 930,
  MAINTENANCECOMPUTEROFFSET: 931,
  SHORTTESTEXECUTE: 935,
  SERVICEACTIVATIONCONFIGURE: 940,
  DC2SERVICEACTIVATIONCONFIGURE: 945,
  DC2RAWDOWNLOAD: 950,
  APPLICATIONCONFIGURATION: 955,
  DC2STARTTRACKING: 960,
  ATPSEQUENCE: 990,
  THEFTALARMTOGGLEINTERIOR: 1000,
  THEFTALARMTOGGLETOW: 1010,
  THEFTALARMSELECTINTERIORTOW: 1020,
  THEFTALARMDESELECTINTERIORTOW: 1030,
  THEFTALARMSTOP: 1040,
  WINDOWOPEN: 1100,
  WINDOWCLOSE: 1110,
  WINDOWVENTILATE: 1120,
  WINDOWMOVE: 1121,
  ROOFOPEN: 1130,
  ROOFCLOSE: 1140,
  ROOFLIFT: 1150,
  ROOFMOVE: 1151,
  BATTERYMAXSOC: 2000,
  BATTERYCHARGEPROGRAM: 2010,
  CHARGEPROGRAMCONFIGURE: 2020,
  ONBOARDFENCESCREATE: 2100,
  ONBOARDFENCESUPDATE: 2110,
  ONBOARDFENCESDELETE: 2120,
  SPEEDFENCESCREATE: 2200,
  SPEEDFENCESUPDATE: 2210,
  SPEEDFENCESDELETE: 2220,
  CHARGINGTARIFFSCREATE: 2300,
  CHARGINGTARIFFSUPDATE: 2310,
  CHARGINGTARIFFSDELETE: 2320,
  THEFTALARMSTART: 2500,
  THEFTALARMSELECTINTERIOR: 2510,
  THEFTALARMDESELECTINTERIOR: 2520,
  THEFTALARMSELECTTOW: 2530,
  THEFTALARMDESELECTTOW: 2540,
  THEFTALARMSELECTDAMAGEDETECTION: 2550,
  THEFTALARMDESELECTDAMAGEDETECTION: 2560,
  THEFTALARMCONFIRMDAMAGEDETECTION: 2570,
  MECALL2START: 2600,
  UDXTRIGGERSYNCHRONIZATION: 1200,
  UDXACTIVEUSERPROFILE: 1210,
  UDXRESETUSERDATA: 1220,
  USERPROFSYNCH: 1230,
  USERDATARESET: 1240,
  PROFACTIVATIONSNAP: 1250,
  PROFACTIVATIONDIRECT: 1255,
  SOFTWAREUPDATE: 1260,
  PUSHNOTIFICATION: 1270,
  MECALLCOMMAND: 1310,
  PRECONDSTARTRCS: 1400,
  PRECONDSTOPRCS: 1410,
  PRECONDCONFIGURERCS: 1420,
  TCUCONFIGURE: 1430,
  EDISONSERVICEACTIVATION: 1431,
  TESTSEQUENCE: 1432,
  PRECONDCONFIGURERACP: 1433,
  CHARGEOPTCONFIGURERACP: 1434,
  TARIFFTABLEDOWNLOAD: 1435,
  PRECONDSTARTRACP: 1436,
  PRECONDSTOPRACP: 1437,
  ROOTCERTIFICATEREMOVE: 1438,
  ONREQUESTPROBEUPLOAD: 1439,
  ROOTCERTIFICATEDOWNLOAD: 1440,
  CONTRACTCERTIFICATEREMOVE: 1441,
  CONTRACTCERTIFICATEDOWNLOAD: 1442,
  PROBECONFIGURATIONUPDATE: 1443,
  RDIAGDELETEECU: 1500,
  RDIAGSTATUSREPORT: 1501,
  RDIAGEXECUTION: 1502,
  IMMOBILIZERCHALLENGE: 1600,
  IMMOBILIZERSEARCHKEYLINE: 1610,
  IMMOBILIZERRELEASEKEYLINE: 1620,
  IMMOBILIZERLOCKKEYLINE: 1630,
  IMMOBILIZERLOCKVEHICLE: 1631,
  IMMOBILIZERRELEASEVEHICLE: 1621,
  SETRENTALSIGNAL: 1700,
  BLACKCHANNELDOWNLOAD: 1800,
  BLACKCHANNELUPLOAD: 1810,
  CONFIGURECSM: 1900,
  UPDATEVEHICLEINFO: 1901,
  RELAYMESSAGETOCSM: 1902,
  RELAYRENTALREQUESTTOCSB: 1903,
  RTMDOWNLOADCONFIG: 2400,
  RTMREADCONFIG: 2410,
  AVPACTIVATE: 2700,
  CHARGECONTROLCONFIGURE: 2800
};

goog.object.extend(exports, proto.proto);
