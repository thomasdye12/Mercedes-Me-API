// source: vehicle-events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var service$activation_pb = require('./service-activation_pb.js');
goog.object.extend(proto, service$activation_pb);
var user$events_pb = require('./user-events_pb.js');
goog.object.extend(proto, user$events_pb);
var vehicle$commands_pb = require('./vehicle-commands_pb.js');
goog.object.extend(proto, vehicle$commands_pb);
var protos_pb = require('./protos_pb.js');
goog.object.extend(proto, protos_pb);
var vehicleapi_pb = require('./vehicleapi_pb.js');
goog.object.extend(proto, vehicleapi_pb);
goog.exportSymbol('proto.proto.AcknowledgePreferredDealerChange', null, global);
goog.exportSymbol('proto.proto.AcknowledgeVEPRequest', null, global);
goog.exportSymbol('proto.proto.AcknowledgeVEPUpdatesByVIN', null, global);
goog.exportSymbol('proto.proto.AcknowledgeVehicleUpdated', null, global);
goog.exportSymbol('proto.proto.AttributeStatus', null, global);
goog.exportSymbol('proto.proto.ChargeProgram', null, global);
goog.exportSymbol('proto.proto.ChargeProgramParameters', null, global);
goog.exportSymbol('proto.proto.ChargeProgramsValue', null, global);
goog.exportSymbol('proto.proto.ConfigurePingInterval', null, global);
goog.exportSymbol('proto.proto.DebugMessage', null, global);
goog.exportSymbol('proto.proto.EcoHistogramBin', null, global);
goog.exportSymbol('proto.proto.EcoHistogramValue', null, global);
goog.exportSymbol('proto.proto.PayloadValue', null, global);
goog.exportSymbol('proto.proto.PayloadValue.MsgCase', null, global);
goog.exportSymbol('proto.proto.PreferredDealerChange', null, global);
goog.exportSymbol('proto.proto.PushMessage', null, global);
goog.exportSymbol('proto.proto.PushMessage.MsgCase', null, global);
goog.exportSymbol('proto.proto.SpeedAlertConfiguration', null, global);
goog.exportSymbol('proto.proto.SpeedAlertConfigurationValue', null, global);
goog.exportSymbol('proto.proto.StateOfCharge', null, global);
goog.exportSymbol('proto.proto.StateOfChargeProfileValue', null, global);
goog.exportSymbol('proto.proto.Tariff', null, global);
goog.exportSymbol('proto.proto.TemperaturePoint', null, global);
goog.exportSymbol('proto.proto.TemperaturePointsValue', null, global);
goog.exportSymbol('proto.proto.TrackingEvent', null, global);
goog.exportSymbol('proto.proto.VEPUpdate', null, global);
goog.exportSymbol('proto.proto.VEPUpdatesByVIN', null, global);
goog.exportSymbol('proto.proto.VVRTimeProfile', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.AttributeTypeCase', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.ClockHourUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.CombustionConsumptionUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.DisplayUnitCase', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.DistanceUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.ElectricityConsumptionUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.GasConsumptionUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.PressureUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.RatioUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.SpeedDistanceUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.SpeedUnit', null, global);
goog.exportSymbol('proto.proto.VehicleAttributeStatus.TemperatureUnit', null, global);
goog.exportSymbol('proto.proto.VehicleStatus', null, global);
goog.exportSymbol('proto.proto.VehicleUpdated', null, global);
goog.exportSymbol('proto.proto.WeekdayTariffValue', null, global);
goog.exportSymbol('proto.proto.WeekendTariffValue', null, global);
goog.exportSymbol('proto.proto.WeeklyProfileValue', null, global);
goog.exportSymbol('proto.proto.WeeklySetting', null, global);
goog.exportSymbol('proto.proto.WeeklySettingsHeadUnitValue', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VEPUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VEPUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VEPUpdate.displayName = 'proto.proto.VEPUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleAttributeStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.VehicleAttributeStatus.repeatedFields_, proto.proto.VehicleAttributeStatus.oneofGroups_);
};
goog.inherits(proto.proto.VehicleAttributeStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleAttributeStatus.displayName = 'proto.proto.VehicleAttributeStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ChargeProgramsValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ChargeProgramsValue.repeatedFields_, null);
};
goog.inherits(proto.proto.ChargeProgramsValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ChargeProgramsValue.displayName = 'proto.proto.ChargeProgramsValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ChargeProgramParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ChargeProgramParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ChargeProgramParameters.displayName = 'proto.proto.ChargeProgramParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.WeeklyProfileValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.WeeklyProfileValue.repeatedFields_, null);
};
goog.inherits(proto.proto.WeeklyProfileValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.WeeklyProfileValue.displayName = 'proto.proto.WeeklyProfileValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VVRTimeProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.VVRTimeProfile.repeatedFields_, null);
};
goog.inherits(proto.proto.VVRTimeProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VVRTimeProfile.displayName = 'proto.proto.VVRTimeProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.EcoHistogramValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.EcoHistogramValue.repeatedFields_, null);
};
goog.inherits(proto.proto.EcoHistogramValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.EcoHistogramValue.displayName = 'proto.proto.EcoHistogramValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.EcoHistogramBin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.EcoHistogramBin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.EcoHistogramBin.displayName = 'proto.proto.EcoHistogramBin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.SpeedAlertConfigurationValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.SpeedAlertConfigurationValue.repeatedFields_, null);
};
goog.inherits(proto.proto.SpeedAlertConfigurationValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.SpeedAlertConfigurationValue.displayName = 'proto.proto.SpeedAlertConfigurationValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.SpeedAlertConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.SpeedAlertConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.SpeedAlertConfiguration.displayName = 'proto.proto.SpeedAlertConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.WeeklySettingsHeadUnitValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.WeeklySettingsHeadUnitValue.repeatedFields_, null);
};
goog.inherits(proto.proto.WeeklySettingsHeadUnitValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.WeeklySettingsHeadUnitValue.displayName = 'proto.proto.WeeklySettingsHeadUnitValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.WeeklySetting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.WeeklySetting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.WeeklySetting.displayName = 'proto.proto.WeeklySetting';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.TemperaturePointsValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.TemperaturePointsValue.repeatedFields_, null);
};
goog.inherits(proto.proto.TemperaturePointsValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.TemperaturePointsValue.displayName = 'proto.proto.TemperaturePointsValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.TemperaturePoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.TemperaturePoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.TemperaturePoint.displayName = 'proto.proto.TemperaturePoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.WeekdayTariffValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.WeekdayTariffValue.repeatedFields_, null);
};
goog.inherits(proto.proto.WeekdayTariffValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.WeekdayTariffValue.displayName = 'proto.proto.WeekdayTariffValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.WeekendTariffValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.WeekendTariffValue.repeatedFields_, null);
};
goog.inherits(proto.proto.WeekendTariffValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.WeekendTariffValue.displayName = 'proto.proto.WeekendTariffValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Tariff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Tariff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Tariff.displayName = 'proto.proto.Tariff';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.StateOfChargeProfileValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.StateOfChargeProfileValue.repeatedFields_, null);
};
goog.inherits(proto.proto.StateOfChargeProfileValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.StateOfChargeProfileValue.displayName = 'proto.proto.StateOfChargeProfileValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.StateOfCharge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.StateOfCharge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.StateOfCharge.displayName = 'proto.proto.StateOfCharge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VEPUpdatesByVIN = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VEPUpdatesByVIN, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VEPUpdatesByVIN.displayName = 'proto.proto.VEPUpdatesByVIN';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.DebugMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.DebugMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.DebugMessage.displayName = 'proto.proto.DebugMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VehicleStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleStatus.displayName = 'proto.proto.VehicleStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PushMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.proto.PushMessage.oneofGroups_);
};
goog.inherits(proto.proto.PushMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.PushMessage.displayName = 'proto.proto.PushMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.TrackingEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.TrackingEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.TrackingEvent.displayName = 'proto.proto.TrackingEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PayloadValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.proto.PayloadValue.oneofGroups_);
};
goog.inherits(proto.proto.PayloadValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.PayloadValue.displayName = 'proto.proto.PayloadValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeVEPRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeVEPRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeVEPRequest.displayName = 'proto.proto.AcknowledgeVEPRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeVEPUpdatesByVIN = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeVEPUpdatesByVIN, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeVEPUpdatesByVIN.displayName = 'proto.proto.AcknowledgeVEPUpdatesByVIN';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ConfigurePingInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ConfigurePingInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ConfigurePingInterval.displayName = 'proto.proto.ConfigurePingInterval';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeVehicleUpdated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeVehicleUpdated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeVehicleUpdated.displayName = 'proto.proto.AcknowledgeVehicleUpdated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgePreferredDealerChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgePreferredDealerChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgePreferredDealerChange.displayName = 'proto.proto.AcknowledgePreferredDealerChange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.VehicleUpdated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.VehicleUpdated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.VehicleUpdated.displayName = 'proto.proto.VehicleUpdated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.PreferredDealerChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.PreferredDealerChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.PreferredDealerChange.displayName = 'proto.proto.PreferredDealerChange';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VEPUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VEPUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VEPUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VEPUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    vin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fullUpdate: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    emitTimestamp: jspb.Message.getFieldWithDefault(msg, 10, 0),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 14, 0),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.proto.VehicleAttributeStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VEPUpdate}
 */
proto.proto.VEPUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VEPUpdate;
  return proto.proto.VEPUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VEPUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VEPUpdate}
 */
proto.proto.VEPUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullUpdate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestamp(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    case 11:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.proto.VehicleAttributeStatus.deserializeBinaryFromReader, "", new proto.proto.VehicleAttributeStatus());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VEPUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VEPUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VEPUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VEPUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFullUpdate();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getEmitTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.proto.VehicleAttributeStatus.serializeBinaryToWriter);
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.VEPUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VEPUpdate} returns this
 */
proto.proto.VEPUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string vin = 2;
 * @return {string}
 */
proto.proto.VEPUpdate.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VEPUpdate} returns this
 */
proto.proto.VEPUpdate.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool full_update = 15;
 * @return {boolean}
 */
proto.proto.VEPUpdate.prototype.getFullUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.VEPUpdate} returns this
 */
proto.proto.VEPUpdate.prototype.setFullUpdate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional int64 emit_timestamp = 10;
 * @return {number}
 */
proto.proto.VEPUpdate.prototype.getEmitTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VEPUpdate} returns this
 */
proto.proto.VEPUpdate.prototype.setEmitTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 14;
 * @return {number}
 */
proto.proto.VEPUpdate.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VEPUpdate} returns this
 */
proto.proto.VEPUpdate.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * map<string, VehicleAttributeStatus> attributes = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.proto.VehicleAttributeStatus>}
 */
proto.proto.VEPUpdate.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.proto.VehicleAttributeStatus>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      proto.proto.VehicleAttributeStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.VEPUpdate} returns this
 */
proto.proto.VEPUpdate.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.VehicleAttributeStatus.repeatedFields_ = [30];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.VehicleAttributeStatus.oneofGroups_ = [[12,13,14,15,25,26,16,17,18,19],[4,5,6,7,8,9,20,21,22,23,24,27,28,29,31]];

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.DisplayUnitCase = {
  DISPLAY_UNIT_NOT_SET: 0,
  COMBUSTION_CONSUMPTION_UNIT: 12,
  GAS_CONSUMPTION_UNIT: 13,
  ELECTRICITY_CONSUMPTION_UNIT: 14,
  SPEED_DISTANCE_UNIT: 15,
  SPEED_UNIT: 25,
  DISTANCE_UNIT: 26,
  TEMPERATURE_UNIT: 16,
  PRESSURE_UNIT: 17,
  RATIO_UNIT: 18,
  CLOCK_HOUR_UNIT: 19
};

/**
 * @return {proto.proto.VehicleAttributeStatus.DisplayUnitCase}
 */
proto.proto.VehicleAttributeStatus.prototype.getDisplayUnitCase = function() {
  return /** @type {proto.proto.VehicleAttributeStatus.DisplayUnitCase} */(jspb.Message.computeOneofCase(this, proto.proto.VehicleAttributeStatus.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.AttributeTypeCase = {
  ATTRIBUTE_TYPE_NOT_SET: 0,
  INT_VALUE: 4,
  BOOL_VALUE: 5,
  STRING_VALUE: 6,
  DOUBLE_VALUE: 7,
  NIL_VALUE: 8,
  UNSUPPORTED_VALUE: 9,
  TEMPERATURE_POINTS_VALUE: 20,
  WEEKDAY_TARIFF_VALUE: 21,
  WEEKEND_TARIFF_VALUE: 22,
  STATE_OF_CHARGE_PROFILE_VALUE: 23,
  WEEKLY_SETTINGS_HEAD_UNIT_VALUE: 24,
  SPEED_ALERT_CONFIGURATION_VALUE: 27,
  ECO_HISTOGRAM_VALUE: 28,
  WEEKLY_PROFILE_VALUE: 29,
  CHARGE_PROGRAMS_VALUE: 31
};

/**
 * @return {proto.proto.VehicleAttributeStatus.AttributeTypeCase}
 */
proto.proto.VehicleAttributeStatus.prototype.getAttributeTypeCase = function() {
  return /** @type {proto.proto.VehicleAttributeStatus.AttributeTypeCase} */(jspb.Message.computeOneofCase(this, proto.proto.VehicleAttributeStatus.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleAttributeStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleAttributeStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleAttributeStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAttributeStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestampInMs: jspb.Message.getFieldWithDefault(msg, 10, 0),
    changed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    serviceIdsList: (f = jspb.Message.getRepeatedField(msg, 30)) == null ? undefined : f,
    displayValue: jspb.Message.getFieldWithDefault(msg, 11, ""),
    combustionConsumptionUnit: jspb.Message.getFieldWithDefault(msg, 12, 0),
    gasConsumptionUnit: jspb.Message.getFieldWithDefault(msg, 13, 0),
    electricityConsumptionUnit: jspb.Message.getFieldWithDefault(msg, 14, 0),
    speedDistanceUnit: jspb.Message.getFieldWithDefault(msg, 15, 0),
    speedUnit: jspb.Message.getFieldWithDefault(msg, 25, 0),
    distanceUnit: jspb.Message.getFieldWithDefault(msg, 26, 0),
    temperatureUnit: jspb.Message.getFieldWithDefault(msg, 16, 0),
    pressureUnit: jspb.Message.getFieldWithDefault(msg, 17, 0),
    ratioUnit: jspb.Message.getFieldWithDefault(msg, 18, 0),
    clockHourUnit: jspb.Message.getFieldWithDefault(msg, 19, 0),
    intValue: jspb.Message.getFieldWithDefault(msg, 4, 0),
    boolValue: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    stringValue: jspb.Message.getFieldWithDefault(msg, 6, ""),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    nilValue: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    unsupportedValue: jspb.Message.getFieldWithDefault(msg, 9, ""),
    temperaturePointsValue: (f = msg.getTemperaturePointsValue()) && proto.proto.TemperaturePointsValue.toObject(includeInstance, f),
    weekdayTariffValue: (f = msg.getWeekdayTariffValue()) && proto.proto.WeekdayTariffValue.toObject(includeInstance, f),
    weekendTariffValue: (f = msg.getWeekendTariffValue()) && proto.proto.WeekendTariffValue.toObject(includeInstance, f),
    stateOfChargeProfileValue: (f = msg.getStateOfChargeProfileValue()) && proto.proto.StateOfChargeProfileValue.toObject(includeInstance, f),
    weeklySettingsHeadUnitValue: (f = msg.getWeeklySettingsHeadUnitValue()) && proto.proto.WeeklySettingsHeadUnitValue.toObject(includeInstance, f),
    speedAlertConfigurationValue: (f = msg.getSpeedAlertConfigurationValue()) && proto.proto.SpeedAlertConfigurationValue.toObject(includeInstance, f),
    ecoHistogramValue: (f = msg.getEcoHistogramValue()) && proto.proto.EcoHistogramValue.toObject(includeInstance, f),
    weeklyProfileValue: (f = msg.getWeeklyProfileValue()) && proto.proto.WeeklyProfileValue.toObject(includeInstance, f),
    chargeProgramsValue: (f = msg.getChargeProgramsValue()) && proto.proto.ChargeProgramsValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleAttributeStatus}
 */
proto.proto.VehicleAttributeStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleAttributeStatus;
  return proto.proto.VehicleAttributeStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleAttributeStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleAttributeStatus}
 */
proto.proto.VehicleAttributeStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampInMs(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChanged(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 30:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setServiceIdsList(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayValue(value);
      break;
    case 12:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.CombustionConsumptionUnit} */ (reader.readEnum());
      msg.setCombustionConsumptionUnit(value);
      break;
    case 13:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.GasConsumptionUnit} */ (reader.readEnum());
      msg.setGasConsumptionUnit(value);
      break;
    case 14:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.ElectricityConsumptionUnit} */ (reader.readEnum());
      msg.setElectricityConsumptionUnit(value);
      break;
    case 15:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.SpeedDistanceUnit} */ (reader.readEnum());
      msg.setSpeedDistanceUnit(value);
      break;
    case 25:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.SpeedUnit} */ (reader.readEnum());
      msg.setSpeedUnit(value);
      break;
    case 26:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.DistanceUnit} */ (reader.readEnum());
      msg.setDistanceUnit(value);
      break;
    case 16:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.TemperatureUnit} */ (reader.readEnum());
      msg.setTemperatureUnit(value);
      break;
    case 17:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.PressureUnit} */ (reader.readEnum());
      msg.setPressureUnit(value);
      break;
    case 18:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.RatioUnit} */ (reader.readEnum());
      msg.setRatioUnit(value);
      break;
    case 19:
      var value = /** @type {!proto.proto.VehicleAttributeStatus.ClockHourUnit} */ (reader.readEnum());
      msg.setClockHourUnit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntValue(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNilValue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnsupportedValue(value);
      break;
    case 20:
      var value = new proto.proto.TemperaturePointsValue;
      reader.readMessage(value,proto.proto.TemperaturePointsValue.deserializeBinaryFromReader);
      msg.setTemperaturePointsValue(value);
      break;
    case 21:
      var value = new proto.proto.WeekdayTariffValue;
      reader.readMessage(value,proto.proto.WeekdayTariffValue.deserializeBinaryFromReader);
      msg.setWeekdayTariffValue(value);
      break;
    case 22:
      var value = new proto.proto.WeekendTariffValue;
      reader.readMessage(value,proto.proto.WeekendTariffValue.deserializeBinaryFromReader);
      msg.setWeekendTariffValue(value);
      break;
    case 23:
      var value = new proto.proto.StateOfChargeProfileValue;
      reader.readMessage(value,proto.proto.StateOfChargeProfileValue.deserializeBinaryFromReader);
      msg.setStateOfChargeProfileValue(value);
      break;
    case 24:
      var value = new proto.proto.WeeklySettingsHeadUnitValue;
      reader.readMessage(value,proto.proto.WeeklySettingsHeadUnitValue.deserializeBinaryFromReader);
      msg.setWeeklySettingsHeadUnitValue(value);
      break;
    case 27:
      var value = new proto.proto.SpeedAlertConfigurationValue;
      reader.readMessage(value,proto.proto.SpeedAlertConfigurationValue.deserializeBinaryFromReader);
      msg.setSpeedAlertConfigurationValue(value);
      break;
    case 28:
      var value = new proto.proto.EcoHistogramValue;
      reader.readMessage(value,proto.proto.EcoHistogramValue.deserializeBinaryFromReader);
      msg.setEcoHistogramValue(value);
      break;
    case 29:
      var value = new proto.proto.WeeklyProfileValue;
      reader.readMessage(value,proto.proto.WeeklyProfileValue.deserializeBinaryFromReader);
      msg.setWeeklyProfileValue(value);
      break;
    case 31:
      var value = new proto.proto.ChargeProgramsValue;
      reader.readMessage(value,proto.proto.ChargeProgramsValue.deserializeBinaryFromReader);
      msg.setChargeProgramsValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleAttributeStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleAttributeStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleAttributeStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleAttributeStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getChanged();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getServiceIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      30,
      f
    );
  }
  f = message.getDisplayValue();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.CombustionConsumptionUnit} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.GasConsumptionUnit} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.ElectricityConsumptionUnit} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.SpeedDistanceUnit} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.SpeedUnit} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.DistanceUnit} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeEnum(
      26,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.TemperatureUnit} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.PressureUnit} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.RatioUnit} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = /** @type {!proto.proto.VehicleAttributeStatus.ClockHourUnit} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTemperaturePointsValue();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.proto.TemperaturePointsValue.serializeBinaryToWriter
    );
  }
  f = message.getWeekdayTariffValue();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.proto.WeekdayTariffValue.serializeBinaryToWriter
    );
  }
  f = message.getWeekendTariffValue();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.proto.WeekendTariffValue.serializeBinaryToWriter
    );
  }
  f = message.getStateOfChargeProfileValue();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.proto.StateOfChargeProfileValue.serializeBinaryToWriter
    );
  }
  f = message.getWeeklySettingsHeadUnitValue();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.proto.WeeklySettingsHeadUnitValue.serializeBinaryToWriter
    );
  }
  f = message.getSpeedAlertConfigurationValue();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.proto.SpeedAlertConfigurationValue.serializeBinaryToWriter
    );
  }
  f = message.getEcoHistogramValue();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.proto.EcoHistogramValue.serializeBinaryToWriter
    );
  }
  f = message.getWeeklyProfileValue();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.proto.WeeklyProfileValue.serializeBinaryToWriter
    );
  }
  f = message.getChargeProgramsValue();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.proto.ChargeProgramsValue.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.CombustionConsumptionUnit = {
  UNSPECIFIED_COMBUSTION_CONSUMPTION_UNIT: 0,
  LITER_PER_100KM: 1,
  KM_PER_LITER: 2,
  MPG_UK: 3,
  MPG_US: 4
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.ElectricityConsumptionUnit = {
  UNSPECIFIED_ELECTRICITY_CONSUMPTION_UNIT: 0,
  KWH_PER_100KM: 1,
  KM_PER_KWH: 2,
  KWH_PER_100MI: 3,
  M_PER_KWH: 4,
  MPGE: 5
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.GasConsumptionUnit = {
  UNSPECIFIED_GAS_CONSUMPTION_UNIT: 0,
  KG_PER_100KM: 1,
  KM_PER_KG: 2,
  M_PER_KG: 3
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.SpeedDistanceUnit = {
  UNSPECIFIED_SPEED_DISTANCE_UNIT: 0,
  KM_PER_H: 1,
  M_PER_H: 2
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.SpeedUnit = {
  UNSPECIFIED_SPEED_UNIT: 0,
  KM_PER_HOUR: 1,
  M_PER_HOUR: 2
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.DistanceUnit = {
  UNSPECIFIED_DISTANCE_UNIT: 0,
  KILOMETERS: 1,
  MILES: 2
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.TemperatureUnit = {
  UNSPECIFIED_TEMPERATURE_UNIT: 0,
  CELSIUS: 1,
  FAHRENHEIT: 2
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.PressureUnit = {
  UNSPECIFIED_PRESSURE_UNIT: 0,
  KPA: 1,
  BAR: 2,
  PSI: 3
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.RatioUnit = {
  UNSPECIFIED_RATIO_UNIT: 0,
  PERCENT: 1
};

/**
 * @enum {number}
 */
proto.proto.VehicleAttributeStatus.ClockHourUnit = {
  UNSPECIFIED_CLOCK_HOUR_UNIT: 0,
  T12H: 1,
  T24H: 2
};

/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.proto.VehicleAttributeStatus.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 timestamp_in_ms = 10;
 * @return {number}
 */
proto.proto.VehicleAttributeStatus.prototype.getTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool changed = 2;
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.getChanged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setChanged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 status = 3;
 * @return {number}
 */
proto.proto.VehicleAttributeStatus.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 service_ids = 30;
 * @return {!Array<number>}
 */
proto.proto.VehicleAttributeStatus.prototype.getServiceIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 30));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setServiceIdsList = function(value) {
  return jspb.Message.setField(this, 30, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.addServiceIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 30, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearServiceIdsList = function() {
  return this.setServiceIdsList([]);
};


/**
 * optional string display_value = 11;
 * @return {string}
 */
proto.proto.VehicleAttributeStatus.prototype.getDisplayValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setDisplayValue = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional CombustionConsumptionUnit combustion_consumption_unit = 12;
 * @return {!proto.proto.VehicleAttributeStatus.CombustionConsumptionUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getCombustionConsumptionUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.CombustionConsumptionUnit} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.CombustionConsumptionUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setCombustionConsumptionUnit = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearCombustionConsumptionUnit = function() {
  return jspb.Message.setOneofField(this, 12, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasCombustionConsumptionUnit = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GasConsumptionUnit gas_consumption_unit = 13;
 * @return {!proto.proto.VehicleAttributeStatus.GasConsumptionUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getGasConsumptionUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.GasConsumptionUnit} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.GasConsumptionUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setGasConsumptionUnit = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearGasConsumptionUnit = function() {
  return jspb.Message.setOneofField(this, 13, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasGasConsumptionUnit = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ElectricityConsumptionUnit electricity_consumption_unit = 14;
 * @return {!proto.proto.VehicleAttributeStatus.ElectricityConsumptionUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getElectricityConsumptionUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.ElectricityConsumptionUnit} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.ElectricityConsumptionUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setElectricityConsumptionUnit = function(value) {
  return jspb.Message.setOneofField(this, 14, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearElectricityConsumptionUnit = function() {
  return jspb.Message.setOneofField(this, 14, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasElectricityConsumptionUnit = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional SpeedDistanceUnit speed_distance_unit = 15;
 * @return {!proto.proto.VehicleAttributeStatus.SpeedDistanceUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getSpeedDistanceUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.SpeedDistanceUnit} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.SpeedDistanceUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setSpeedDistanceUnit = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearSpeedDistanceUnit = function() {
  return jspb.Message.setOneofField(this, 15, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasSpeedDistanceUnit = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional SpeedUnit speed_unit = 25;
 * @return {!proto.proto.VehicleAttributeStatus.SpeedUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getSpeedUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.SpeedUnit} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.SpeedUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setSpeedUnit = function(value) {
  return jspb.Message.setOneofField(this, 25, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearSpeedUnit = function() {
  return jspb.Message.setOneofField(this, 25, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasSpeedUnit = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional DistanceUnit distance_unit = 26;
 * @return {!proto.proto.VehicleAttributeStatus.DistanceUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getDistanceUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.DistanceUnit} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.DistanceUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setDistanceUnit = function(value) {
  return jspb.Message.setOneofField(this, 26, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearDistanceUnit = function() {
  return jspb.Message.setOneofField(this, 26, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasDistanceUnit = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional TemperatureUnit temperature_unit = 16;
 * @return {!proto.proto.VehicleAttributeStatus.TemperatureUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getTemperatureUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.TemperatureUnit} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.TemperatureUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setTemperatureUnit = function(value) {
  return jspb.Message.setOneofField(this, 16, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearTemperatureUnit = function() {
  return jspb.Message.setOneofField(this, 16, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasTemperatureUnit = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional PressureUnit pressure_unit = 17;
 * @return {!proto.proto.VehicleAttributeStatus.PressureUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getPressureUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.PressureUnit} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.PressureUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setPressureUnit = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearPressureUnit = function() {
  return jspb.Message.setOneofField(this, 17, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasPressureUnit = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional RatioUnit ratio_unit = 18;
 * @return {!proto.proto.VehicleAttributeStatus.RatioUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getRatioUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.RatioUnit} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.RatioUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setRatioUnit = function(value) {
  return jspb.Message.setOneofField(this, 18, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearRatioUnit = function() {
  return jspb.Message.setOneofField(this, 18, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasRatioUnit = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ClockHourUnit clock_hour_unit = 19;
 * @return {!proto.proto.VehicleAttributeStatus.ClockHourUnit}
 */
proto.proto.VehicleAttributeStatus.prototype.getClockHourUnit = function() {
  return /** @type {!proto.proto.VehicleAttributeStatus.ClockHourUnit} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.proto.VehicleAttributeStatus.ClockHourUnit} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setClockHourUnit = function(value) {
  return jspb.Message.setOneofField(this, 19, proto.proto.VehicleAttributeStatus.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearClockHourUnit = function() {
  return jspb.Message.setOneofField(this, 19, proto.proto.VehicleAttributeStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasClockHourUnit = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional int64 int_value = 4;
 * @return {number}
 */
proto.proto.VehicleAttributeStatus.prototype.getIntValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setIntValue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearIntValue = function() {
  return jspb.Message.setOneofField(this, 4, proto.proto.VehicleAttributeStatus.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasIntValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool bool_value = 5;
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 5, proto.proto.VehicleAttributeStatus.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string string_value = 6;
 * @return {string}
 */
proto.proto.VehicleAttributeStatus.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 6, proto.proto.VehicleAttributeStatus.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double double_value = 7;
 * @return {number}
 */
proto.proto.VehicleAttributeStatus.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 7, proto.proto.VehicleAttributeStatus.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool nil_value = 8;
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.getNilValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setNilValue = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearNilValue = function() {
  return jspb.Message.setOneofField(this, 8, proto.proto.VehicleAttributeStatus.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasNilValue = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string unsupported_value = 9;
 * @return {string}
 */
proto.proto.VehicleAttributeStatus.prototype.getUnsupportedValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.setUnsupportedValue = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearUnsupportedValue = function() {
  return jspb.Message.setOneofField(this, 9, proto.proto.VehicleAttributeStatus.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasUnsupportedValue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TemperaturePointsValue temperature_points_value = 20;
 * @return {?proto.proto.TemperaturePointsValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getTemperaturePointsValue = function() {
  return /** @type{?proto.proto.TemperaturePointsValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.TemperaturePointsValue, 20));
};


/**
 * @param {?proto.proto.TemperaturePointsValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setTemperaturePointsValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearTemperaturePointsValue = function() {
  return this.setTemperaturePointsValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasTemperaturePointsValue = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional WeekdayTariffValue weekday_tariff_value = 21;
 * @return {?proto.proto.WeekdayTariffValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getWeekdayTariffValue = function() {
  return /** @type{?proto.proto.WeekdayTariffValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.WeekdayTariffValue, 21));
};


/**
 * @param {?proto.proto.WeekdayTariffValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setWeekdayTariffValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearWeekdayTariffValue = function() {
  return this.setWeekdayTariffValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasWeekdayTariffValue = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional WeekendTariffValue weekend_tariff_value = 22;
 * @return {?proto.proto.WeekendTariffValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getWeekendTariffValue = function() {
  return /** @type{?proto.proto.WeekendTariffValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.WeekendTariffValue, 22));
};


/**
 * @param {?proto.proto.WeekendTariffValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setWeekendTariffValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearWeekendTariffValue = function() {
  return this.setWeekendTariffValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasWeekendTariffValue = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional StateOfChargeProfileValue state_of_charge_profile_value = 23;
 * @return {?proto.proto.StateOfChargeProfileValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getStateOfChargeProfileValue = function() {
  return /** @type{?proto.proto.StateOfChargeProfileValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.StateOfChargeProfileValue, 23));
};


/**
 * @param {?proto.proto.StateOfChargeProfileValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setStateOfChargeProfileValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearStateOfChargeProfileValue = function() {
  return this.setStateOfChargeProfileValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasStateOfChargeProfileValue = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional WeeklySettingsHeadUnitValue weekly_settings_head_unit_value = 24;
 * @return {?proto.proto.WeeklySettingsHeadUnitValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getWeeklySettingsHeadUnitValue = function() {
  return /** @type{?proto.proto.WeeklySettingsHeadUnitValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.WeeklySettingsHeadUnitValue, 24));
};


/**
 * @param {?proto.proto.WeeklySettingsHeadUnitValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setWeeklySettingsHeadUnitValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 24, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearWeeklySettingsHeadUnitValue = function() {
  return this.setWeeklySettingsHeadUnitValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasWeeklySettingsHeadUnitValue = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional SpeedAlertConfigurationValue speed_alert_configuration_value = 27;
 * @return {?proto.proto.SpeedAlertConfigurationValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getSpeedAlertConfigurationValue = function() {
  return /** @type{?proto.proto.SpeedAlertConfigurationValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.SpeedAlertConfigurationValue, 27));
};


/**
 * @param {?proto.proto.SpeedAlertConfigurationValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setSpeedAlertConfigurationValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearSpeedAlertConfigurationValue = function() {
  return this.setSpeedAlertConfigurationValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasSpeedAlertConfigurationValue = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional EcoHistogramValue eco_histogram_value = 28;
 * @return {?proto.proto.EcoHistogramValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getEcoHistogramValue = function() {
  return /** @type{?proto.proto.EcoHistogramValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.EcoHistogramValue, 28));
};


/**
 * @param {?proto.proto.EcoHistogramValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setEcoHistogramValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 28, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearEcoHistogramValue = function() {
  return this.setEcoHistogramValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasEcoHistogramValue = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional WeeklyProfileValue weekly_profile_value = 29;
 * @return {?proto.proto.WeeklyProfileValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getWeeklyProfileValue = function() {
  return /** @type{?proto.proto.WeeklyProfileValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.WeeklyProfileValue, 29));
};


/**
 * @param {?proto.proto.WeeklyProfileValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setWeeklyProfileValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 29, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearWeeklyProfileValue = function() {
  return this.setWeeklyProfileValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasWeeklyProfileValue = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional ChargeProgramsValue charge_programs_value = 31;
 * @return {?proto.proto.ChargeProgramsValue}
 */
proto.proto.VehicleAttributeStatus.prototype.getChargeProgramsValue = function() {
  return /** @type{?proto.proto.ChargeProgramsValue} */ (
    jspb.Message.getWrapperField(this, proto.proto.ChargeProgramsValue, 31));
};


/**
 * @param {?proto.proto.ChargeProgramsValue|undefined} value
 * @return {!proto.proto.VehicleAttributeStatus} returns this
*/
proto.proto.VehicleAttributeStatus.prototype.setChargeProgramsValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 31, proto.proto.VehicleAttributeStatus.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.VehicleAttributeStatus} returns this
 */
proto.proto.VehicleAttributeStatus.prototype.clearChargeProgramsValue = function() {
  return this.setChargeProgramsValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.VehicleAttributeStatus.prototype.hasChargeProgramsValue = function() {
  return jspb.Message.getField(this, 31) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ChargeProgramsValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ChargeProgramsValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ChargeProgramsValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ChargeProgramsValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ChargeProgramsValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    chargeProgramParametersList: jspb.Message.toObjectList(msg.getChargeProgramParametersList(),
    proto.proto.ChargeProgramParameters.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ChargeProgramsValue}
 */
proto.proto.ChargeProgramsValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ChargeProgramsValue;
  return proto.proto.ChargeProgramsValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ChargeProgramsValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ChargeProgramsValue}
 */
proto.proto.ChargeProgramsValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.ChargeProgramParameters;
      reader.readMessage(value,proto.proto.ChargeProgramParameters.deserializeBinaryFromReader);
      msg.addChargeProgramParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ChargeProgramsValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ChargeProgramsValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ChargeProgramsValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ChargeProgramsValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChargeProgramParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.ChargeProgramParameters.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChargeProgramParameters charge_program_parameters = 1;
 * @return {!Array<!proto.proto.ChargeProgramParameters>}
 */
proto.proto.ChargeProgramsValue.prototype.getChargeProgramParametersList = function() {
  return /** @type{!Array<!proto.proto.ChargeProgramParameters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ChargeProgramParameters, 1));
};


/**
 * @param {!Array<!proto.proto.ChargeProgramParameters>} value
 * @return {!proto.proto.ChargeProgramsValue} returns this
*/
proto.proto.ChargeProgramsValue.prototype.setChargeProgramParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.ChargeProgramParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ChargeProgramParameters}
 */
proto.proto.ChargeProgramsValue.prototype.addChargeProgramParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.ChargeProgramParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ChargeProgramsValue} returns this
 */
proto.proto.ChargeProgramsValue.prototype.clearChargeProgramParametersList = function() {
  return this.setChargeProgramParametersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ChargeProgramParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ChargeProgramParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ChargeProgramParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ChargeProgramParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    chargeProgram: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxSoc: jspb.Message.getFieldWithDefault(msg, 2, 0),
    autoUnlock: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    locationBasedCharging: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    weeklyProfile: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    clocktimer: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    maxChargingCurrent: jspb.Message.getFieldWithDefault(msg, 7, 0),
    ecoCharging: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ChargeProgramParameters}
 */
proto.proto.ChargeProgramParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ChargeProgramParameters;
  return proto.proto.ChargeProgramParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ChargeProgramParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ChargeProgramParameters}
 */
proto.proto.ChargeProgramParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.ChargeProgram} */ (reader.readEnum());
      msg.setChargeProgram(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxSoc(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoUnlock(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocationBasedCharging(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWeeklyProfile(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClocktimer(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxChargingCurrent(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEcoCharging(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ChargeProgramParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ChargeProgramParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ChargeProgramParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ChargeProgramParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChargeProgram();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMaxSoc();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAutoUnlock();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLocationBasedCharging();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getWeeklyProfile();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getClocktimer();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMaxChargingCurrent();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getEcoCharging();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional ChargeProgram charge_program = 1;
 * @return {!proto.proto.ChargeProgram}
 */
proto.proto.ChargeProgramParameters.prototype.getChargeProgram = function() {
  return /** @type {!proto.proto.ChargeProgram} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.proto.ChargeProgram} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setChargeProgram = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 max_soc = 2;
 * @return {number}
 */
proto.proto.ChargeProgramParameters.prototype.getMaxSoc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setMaxSoc = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool auto_unlock = 3;
 * @return {boolean}
 */
proto.proto.ChargeProgramParameters.prototype.getAutoUnlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setAutoUnlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool location_based_charging = 4;
 * @return {boolean}
 */
proto.proto.ChargeProgramParameters.prototype.getLocationBasedCharging = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setLocationBasedCharging = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool weekly_profile = 5;
 * @return {boolean}
 */
proto.proto.ChargeProgramParameters.prototype.getWeeklyProfile = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setWeeklyProfile = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool clockTimer = 6;
 * @return {boolean}
 */
proto.proto.ChargeProgramParameters.prototype.getClocktimer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setClocktimer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 max_charging_current = 7;
 * @return {number}
 */
proto.proto.ChargeProgramParameters.prototype.getMaxChargingCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setMaxChargingCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool eco_charging = 8;
 * @return {boolean}
 */
proto.proto.ChargeProgramParameters.prototype.getEcoCharging = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ChargeProgramParameters} returns this
 */
proto.proto.ChargeProgramParameters.prototype.setEcoCharging = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.WeeklyProfileValue.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.WeeklyProfileValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.WeeklyProfileValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.WeeklyProfileValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeeklyProfileValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    singleTimeProfileEntriesActivatable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    maxNumberOfWeeklyTimeProfileSlots: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxNumberOfTimeProfiles: jspb.Message.getFieldWithDefault(msg, 3, 0),
    currentNumberOfTimeProfileSlots: jspb.Message.getFieldWithDefault(msg, 4, 0),
    currentNumberOfTimeProfiles: jspb.Message.getFieldWithDefault(msg, 5, 0),
    timeProfilesList: jspb.Message.toObjectList(msg.getTimeProfilesList(),
    proto.proto.VVRTimeProfile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.WeeklyProfileValue}
 */
proto.proto.WeeklyProfileValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.WeeklyProfileValue;
  return proto.proto.WeeklyProfileValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.WeeklyProfileValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.WeeklyProfileValue}
 */
proto.proto.WeeklyProfileValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleTimeProfileEntriesActivatable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxNumberOfWeeklyTimeProfileSlots(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxNumberOfTimeProfiles(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentNumberOfTimeProfileSlots(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentNumberOfTimeProfiles(value);
      break;
    case 6:
      var value = new proto.proto.VVRTimeProfile;
      reader.readMessage(value,proto.proto.VVRTimeProfile.deserializeBinaryFromReader);
      msg.addTimeProfiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.WeeklyProfileValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.WeeklyProfileValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.WeeklyProfileValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeeklyProfileValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSingleTimeProfileEntriesActivatable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMaxNumberOfWeeklyTimeProfileSlots();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaxNumberOfTimeProfiles();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCurrentNumberOfTimeProfileSlots();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCurrentNumberOfTimeProfiles();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTimeProfilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.proto.VVRTimeProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool single_time_profile_entries_activatable = 1;
 * @return {boolean}
 */
proto.proto.WeeklyProfileValue.prototype.getSingleTimeProfileEntriesActivatable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.WeeklyProfileValue} returns this
 */
proto.proto.WeeklyProfileValue.prototype.setSingleTimeProfileEntriesActivatable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 max_number_of_weekly_time_profile_slots = 2;
 * @return {number}
 */
proto.proto.WeeklyProfileValue.prototype.getMaxNumberOfWeeklyTimeProfileSlots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.WeeklyProfileValue} returns this
 */
proto.proto.WeeklyProfileValue.prototype.setMaxNumberOfWeeklyTimeProfileSlots = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 max_number_of_time_profiles = 3;
 * @return {number}
 */
proto.proto.WeeklyProfileValue.prototype.getMaxNumberOfTimeProfiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.WeeklyProfileValue} returns this
 */
proto.proto.WeeklyProfileValue.prototype.setMaxNumberOfTimeProfiles = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 current_number_of_time_profile_slots = 4;
 * @return {number}
 */
proto.proto.WeeklyProfileValue.prototype.getCurrentNumberOfTimeProfileSlots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.WeeklyProfileValue} returns this
 */
proto.proto.WeeklyProfileValue.prototype.setCurrentNumberOfTimeProfileSlots = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 current_number_of_time_profiles = 5;
 * @return {number}
 */
proto.proto.WeeklyProfileValue.prototype.getCurrentNumberOfTimeProfiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.WeeklyProfileValue} returns this
 */
proto.proto.WeeklyProfileValue.prototype.setCurrentNumberOfTimeProfiles = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated VVRTimeProfile time_profiles = 6;
 * @return {!Array<!proto.proto.VVRTimeProfile>}
 */
proto.proto.WeeklyProfileValue.prototype.getTimeProfilesList = function() {
  return /** @type{!Array<!proto.proto.VVRTimeProfile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.VVRTimeProfile, 6));
};


/**
 * @param {!Array<!proto.proto.VVRTimeProfile>} value
 * @return {!proto.proto.WeeklyProfileValue} returns this
*/
proto.proto.WeeklyProfileValue.prototype.setTimeProfilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.proto.VVRTimeProfile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.VVRTimeProfile}
 */
proto.proto.WeeklyProfileValue.prototype.addTimeProfiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.proto.VVRTimeProfile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.WeeklyProfileValue} returns this
 */
proto.proto.WeeklyProfileValue.prototype.clearTimeProfilesList = function() {
  return this.setTimeProfilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.VVRTimeProfile.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VVRTimeProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VVRTimeProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VVRTimeProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VVRTimeProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hour: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minute: jspb.Message.getFieldWithDefault(msg, 3, 0),
    daysList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    active: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    applicationIdentifier: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VVRTimeProfile}
 */
proto.proto.VVRTimeProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VVRTimeProfile;
  return proto.proto.VVRTimeProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VVRTimeProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VVRTimeProfile}
 */
proto.proto.VVRTimeProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHour(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinute(value);
      break;
    case 4:
      var value = /** @type {!Array<!proto.proto.TimeProfileDay>} */ (reader.readPackedEnum());
      msg.setDaysList(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApplicationIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VVRTimeProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VVRTimeProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VVRTimeProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VVRTimeProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHour();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMinute();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDaysList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getApplicationIdentifier();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int32 identifier = 1;
 * @return {number}
 */
proto.proto.VVRTimeProfile.prototype.getIdentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.setIdentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 hour = 2;
 * @return {number}
 */
proto.proto.VVRTimeProfile.prototype.getHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.setHour = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 minute = 3;
 * @return {number}
 */
proto.proto.VVRTimeProfile.prototype.getMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.setMinute = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated TimeProfileDay days = 4;
 * @return {!Array<!proto.proto.TimeProfileDay>}
 */
proto.proto.VVRTimeProfile.prototype.getDaysList = function() {
  return /** @type {!Array<!proto.proto.TimeProfileDay>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.proto.TimeProfileDay>} value
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.setDaysList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.proto.TimeProfileDay} value
 * @param {number=} opt_index
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.addDays = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.clearDaysList = function() {
  return this.setDaysList([]);
};


/**
 * optional bool active = 5;
 * @return {boolean}
 */
proto.proto.VVRTimeProfile.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 application_identifier = 6;
 * @return {number}
 */
proto.proto.VVRTimeProfile.prototype.getApplicationIdentifier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VVRTimeProfile} returns this
 */
proto.proto.VVRTimeProfile.prototype.setApplicationIdentifier = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.EcoHistogramValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.EcoHistogramValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.EcoHistogramValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.EcoHistogramValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.EcoHistogramValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    ecoHistogramBinsList: jspb.Message.toObjectList(msg.getEcoHistogramBinsList(),
    proto.proto.EcoHistogramBin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.EcoHistogramValue}
 */
proto.proto.EcoHistogramValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.EcoHistogramValue;
  return proto.proto.EcoHistogramValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.EcoHistogramValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.EcoHistogramValue}
 */
proto.proto.EcoHistogramValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.EcoHistogramBin;
      reader.readMessage(value,proto.proto.EcoHistogramBin.deserializeBinaryFromReader);
      msg.addEcoHistogramBins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.EcoHistogramValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.EcoHistogramValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.EcoHistogramValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.EcoHistogramValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEcoHistogramBinsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.EcoHistogramBin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EcoHistogramBin eco_histogram_bins = 1;
 * @return {!Array<!proto.proto.EcoHistogramBin>}
 */
proto.proto.EcoHistogramValue.prototype.getEcoHistogramBinsList = function() {
  return /** @type{!Array<!proto.proto.EcoHistogramBin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.EcoHistogramBin, 1));
};


/**
 * @param {!Array<!proto.proto.EcoHistogramBin>} value
 * @return {!proto.proto.EcoHistogramValue} returns this
*/
proto.proto.EcoHistogramValue.prototype.setEcoHistogramBinsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.EcoHistogramBin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.EcoHistogramBin}
 */
proto.proto.EcoHistogramValue.prototype.addEcoHistogramBins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.EcoHistogramBin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.EcoHistogramValue} returns this
 */
proto.proto.EcoHistogramValue.prototype.clearEcoHistogramBinsList = function() {
  return this.setEcoHistogramBinsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.EcoHistogramBin.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.EcoHistogramBin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.EcoHistogramBin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.EcoHistogramBin.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.EcoHistogramBin}
 */
proto.proto.EcoHistogramBin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.EcoHistogramBin;
  return proto.proto.EcoHistogramBin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.EcoHistogramBin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.EcoHistogramBin}
 */
proto.proto.EcoHistogramBin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setInterval(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.EcoHistogramBin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.EcoHistogramBin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.EcoHistogramBin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.EcoHistogramBin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double interval = 1;
 * @return {number}
 */
proto.proto.EcoHistogramBin.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.EcoHistogramBin} returns this
 */
proto.proto.EcoHistogramBin.prototype.setInterval = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.proto.EcoHistogramBin.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.EcoHistogramBin} returns this
 */
proto.proto.EcoHistogramBin.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.SpeedAlertConfigurationValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.SpeedAlertConfigurationValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.SpeedAlertConfigurationValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.SpeedAlertConfigurationValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SpeedAlertConfigurationValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    speedAlertConfigurationsList: jspb.Message.toObjectList(msg.getSpeedAlertConfigurationsList(),
    proto.proto.SpeedAlertConfiguration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.SpeedAlertConfigurationValue}
 */
proto.proto.SpeedAlertConfigurationValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.SpeedAlertConfigurationValue;
  return proto.proto.SpeedAlertConfigurationValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.SpeedAlertConfigurationValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.SpeedAlertConfigurationValue}
 */
proto.proto.SpeedAlertConfigurationValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.SpeedAlertConfiguration;
      reader.readMessage(value,proto.proto.SpeedAlertConfiguration.deserializeBinaryFromReader);
      msg.addSpeedAlertConfigurations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.SpeedAlertConfigurationValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.SpeedAlertConfigurationValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.SpeedAlertConfigurationValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SpeedAlertConfigurationValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpeedAlertConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.SpeedAlertConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SpeedAlertConfiguration speed_alert_configurations = 1;
 * @return {!Array<!proto.proto.SpeedAlertConfiguration>}
 */
proto.proto.SpeedAlertConfigurationValue.prototype.getSpeedAlertConfigurationsList = function() {
  return /** @type{!Array<!proto.proto.SpeedAlertConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.SpeedAlertConfiguration, 1));
};


/**
 * @param {!Array<!proto.proto.SpeedAlertConfiguration>} value
 * @return {!proto.proto.SpeedAlertConfigurationValue} returns this
*/
proto.proto.SpeedAlertConfigurationValue.prototype.setSpeedAlertConfigurationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.SpeedAlertConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.SpeedAlertConfiguration}
 */
proto.proto.SpeedAlertConfigurationValue.prototype.addSpeedAlertConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.SpeedAlertConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.SpeedAlertConfigurationValue} returns this
 */
proto.proto.SpeedAlertConfigurationValue.prototype.clearSpeedAlertConfigurationsList = function() {
  return this.setSpeedAlertConfigurationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.SpeedAlertConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.SpeedAlertConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.SpeedAlertConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SpeedAlertConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    endTimestampInS: jspb.Message.getFieldWithDefault(msg, 1, 0),
    thresholdInKph: jspb.Message.getFieldWithDefault(msg, 2, 0),
    thresholdDisplayValue: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.SpeedAlertConfiguration}
 */
proto.proto.SpeedAlertConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.SpeedAlertConfiguration;
  return proto.proto.SpeedAlertConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.SpeedAlertConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.SpeedAlertConfiguration}
 */
proto.proto.SpeedAlertConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTimestampInS(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThresholdInKph(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThresholdDisplayValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.SpeedAlertConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.SpeedAlertConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.SpeedAlertConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SpeedAlertConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndTimestampInS();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getThresholdInKph();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getThresholdDisplayValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 end_timestamp_in_s = 1;
 * @return {number}
 */
proto.proto.SpeedAlertConfiguration.prototype.getEndTimestampInS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.SpeedAlertConfiguration} returns this
 */
proto.proto.SpeedAlertConfiguration.prototype.setEndTimestampInS = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 threshold_in_kph = 2;
 * @return {number}
 */
proto.proto.SpeedAlertConfiguration.prototype.getThresholdInKph = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.SpeedAlertConfiguration} returns this
 */
proto.proto.SpeedAlertConfiguration.prototype.setThresholdInKph = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string threshold_display_value = 3;
 * @return {string}
 */
proto.proto.SpeedAlertConfiguration.prototype.getThresholdDisplayValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.SpeedAlertConfiguration} returns this
 */
proto.proto.SpeedAlertConfiguration.prototype.setThresholdDisplayValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.WeeklySettingsHeadUnitValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.WeeklySettingsHeadUnitValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.WeeklySettingsHeadUnitValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.WeeklySettingsHeadUnitValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeeklySettingsHeadUnitValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    weeklySettingsList: jspb.Message.toObjectList(msg.getWeeklySettingsList(),
    proto.proto.WeeklySetting.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.WeeklySettingsHeadUnitValue}
 */
proto.proto.WeeklySettingsHeadUnitValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.WeeklySettingsHeadUnitValue;
  return proto.proto.WeeklySettingsHeadUnitValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.WeeklySettingsHeadUnitValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.WeeklySettingsHeadUnitValue}
 */
proto.proto.WeeklySettingsHeadUnitValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.WeeklySetting;
      reader.readMessage(value,proto.proto.WeeklySetting.deserializeBinaryFromReader);
      msg.addWeeklySettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.WeeklySettingsHeadUnitValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.WeeklySettingsHeadUnitValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.WeeklySettingsHeadUnitValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeeklySettingsHeadUnitValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeeklySettingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.WeeklySetting.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WeeklySetting weekly_settings = 1;
 * @return {!Array<!proto.proto.WeeklySetting>}
 */
proto.proto.WeeklySettingsHeadUnitValue.prototype.getWeeklySettingsList = function() {
  return /** @type{!Array<!proto.proto.WeeklySetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.WeeklySetting, 1));
};


/**
 * @param {!Array<!proto.proto.WeeklySetting>} value
 * @return {!proto.proto.WeeklySettingsHeadUnitValue} returns this
*/
proto.proto.WeeklySettingsHeadUnitValue.prototype.setWeeklySettingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.WeeklySetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.WeeklySetting}
 */
proto.proto.WeeklySettingsHeadUnitValue.prototype.addWeeklySettings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.WeeklySetting, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.WeeklySettingsHeadUnitValue} returns this
 */
proto.proto.WeeklySettingsHeadUnitValue.prototype.clearWeeklySettingsList = function() {
  return this.setWeeklySettingsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.WeeklySetting.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.WeeklySetting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.WeeklySetting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeeklySetting.toObject = function(includeInstance, msg) {
  var f, obj = {
    day: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minutesSinceMidnight: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.WeeklySetting}
 */
proto.proto.WeeklySetting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.WeeklySetting;
  return proto.proto.WeeklySetting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.WeeklySetting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.WeeklySetting}
 */
proto.proto.WeeklySetting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinutesSinceMidnight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.WeeklySetting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.WeeklySetting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.WeeklySetting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeeklySetting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMinutesSinceMidnight();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 day = 1;
 * @return {number}
 */
proto.proto.WeeklySetting.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.WeeklySetting} returns this
 */
proto.proto.WeeklySetting.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 minutes_since_midnight = 2;
 * @return {number}
 */
proto.proto.WeeklySetting.prototype.getMinutesSinceMidnight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.WeeklySetting} returns this
 */
proto.proto.WeeklySetting.prototype.setMinutesSinceMidnight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.TemperaturePointsValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.TemperaturePointsValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.TemperaturePointsValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.TemperaturePointsValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TemperaturePointsValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    temperaturePointsList: jspb.Message.toObjectList(msg.getTemperaturePointsList(),
    proto.proto.TemperaturePoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.TemperaturePointsValue}
 */
proto.proto.TemperaturePointsValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.TemperaturePointsValue;
  return proto.proto.TemperaturePointsValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.TemperaturePointsValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.TemperaturePointsValue}
 */
proto.proto.TemperaturePointsValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.TemperaturePoint;
      reader.readMessage(value,proto.proto.TemperaturePoint.deserializeBinaryFromReader);
      msg.addTemperaturePoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.TemperaturePointsValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.TemperaturePointsValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.TemperaturePointsValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TemperaturePointsValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTemperaturePointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.TemperaturePoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TemperaturePoint temperature_points = 1;
 * @return {!Array<!proto.proto.TemperaturePoint>}
 */
proto.proto.TemperaturePointsValue.prototype.getTemperaturePointsList = function() {
  return /** @type{!Array<!proto.proto.TemperaturePoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.TemperaturePoint, 1));
};


/**
 * @param {!Array<!proto.proto.TemperaturePoint>} value
 * @return {!proto.proto.TemperaturePointsValue} returns this
*/
proto.proto.TemperaturePointsValue.prototype.setTemperaturePointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.TemperaturePoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.TemperaturePoint}
 */
proto.proto.TemperaturePointsValue.prototype.addTemperaturePoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.TemperaturePoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.TemperaturePointsValue} returns this
 */
proto.proto.TemperaturePointsValue.prototype.clearTemperaturePointsList = function() {
  return this.setTemperaturePointsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.TemperaturePoint.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.TemperaturePoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.TemperaturePoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TemperaturePoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    zone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    temperature: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    temperatureDisplayValue: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.TemperaturePoint}
 */
proto.proto.TemperaturePoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.TemperaturePoint;
  return proto.proto.TemperaturePoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.TemperaturePoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.TemperaturePoint}
 */
proto.proto.TemperaturePoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setZone(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTemperature(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemperatureDisplayValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.TemperaturePoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.TemperaturePoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.TemperaturePoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TemperaturePoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTemperature();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTemperatureDisplayValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string zone = 1;
 * @return {string}
 */
proto.proto.TemperaturePoint.prototype.getZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.TemperaturePoint} returns this
 */
proto.proto.TemperaturePoint.prototype.setZone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double temperature = 2;
 * @return {number}
 */
proto.proto.TemperaturePoint.prototype.getTemperature = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.TemperaturePoint} returns this
 */
proto.proto.TemperaturePoint.prototype.setTemperature = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string temperature_display_value = 3;
 * @return {string}
 */
proto.proto.TemperaturePoint.prototype.getTemperatureDisplayValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.TemperaturePoint} returns this
 */
proto.proto.TemperaturePoint.prototype.setTemperatureDisplayValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.WeekdayTariffValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.WeekdayTariffValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.WeekdayTariffValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.WeekdayTariffValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeekdayTariffValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    tariffsList: jspb.Message.toObjectList(msg.getTariffsList(),
    proto.proto.Tariff.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.WeekdayTariffValue}
 */
proto.proto.WeekdayTariffValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.WeekdayTariffValue;
  return proto.proto.WeekdayTariffValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.WeekdayTariffValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.WeekdayTariffValue}
 */
proto.proto.WeekdayTariffValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Tariff;
      reader.readMessage(value,proto.proto.Tariff.deserializeBinaryFromReader);
      msg.addTariffs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.WeekdayTariffValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.WeekdayTariffValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.WeekdayTariffValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeekdayTariffValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTariffsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Tariff.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Tariff tariffs = 1;
 * @return {!Array<!proto.proto.Tariff>}
 */
proto.proto.WeekdayTariffValue.prototype.getTariffsList = function() {
  return /** @type{!Array<!proto.proto.Tariff>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Tariff, 1));
};


/**
 * @param {!Array<!proto.proto.Tariff>} value
 * @return {!proto.proto.WeekdayTariffValue} returns this
*/
proto.proto.WeekdayTariffValue.prototype.setTariffsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Tariff=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Tariff}
 */
proto.proto.WeekdayTariffValue.prototype.addTariffs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Tariff, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.WeekdayTariffValue} returns this
 */
proto.proto.WeekdayTariffValue.prototype.clearTariffsList = function() {
  return this.setTariffsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.WeekendTariffValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.WeekendTariffValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.WeekendTariffValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.WeekendTariffValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeekendTariffValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    tariffsList: jspb.Message.toObjectList(msg.getTariffsList(),
    proto.proto.Tariff.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.WeekendTariffValue}
 */
proto.proto.WeekendTariffValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.WeekendTariffValue;
  return proto.proto.WeekendTariffValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.WeekendTariffValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.WeekendTariffValue}
 */
proto.proto.WeekendTariffValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Tariff;
      reader.readMessage(value,proto.proto.Tariff.deserializeBinaryFromReader);
      msg.addTariffs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.WeekendTariffValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.WeekendTariffValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.WeekendTariffValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.WeekendTariffValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTariffsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Tariff.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Tariff tariffs = 1;
 * @return {!Array<!proto.proto.Tariff>}
 */
proto.proto.WeekendTariffValue.prototype.getTariffsList = function() {
  return /** @type{!Array<!proto.proto.Tariff>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Tariff, 1));
};


/**
 * @param {!Array<!proto.proto.Tariff>} value
 * @return {!proto.proto.WeekendTariffValue} returns this
*/
proto.proto.WeekendTariffValue.prototype.setTariffsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Tariff=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Tariff}
 */
proto.proto.WeekendTariffValue.prototype.addTariffs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Tariff, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.WeekendTariffValue} returns this
 */
proto.proto.WeekendTariffValue.prototype.clearTariffsList = function() {
  return this.setTariffsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Tariff.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Tariff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Tariff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Tariff.toObject = function(includeInstance, msg) {
  var f, obj = {
    rate: jspb.Message.getFieldWithDefault(msg, 1, 0),
    time: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Tariff}
 */
proto.proto.Tariff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Tariff;
  return proto.proto.Tariff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Tariff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Tariff}
 */
proto.proto.Tariff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Tariff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Tariff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Tariff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Tariff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRate();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 rate = 1;
 * @return {number}
 */
proto.proto.Tariff.prototype.getRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Tariff} returns this
 */
proto.proto.Tariff.prototype.setRate = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 time = 2;
 * @return {number}
 */
proto.proto.Tariff.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Tariff} returns this
 */
proto.proto.Tariff.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.StateOfChargeProfileValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.StateOfChargeProfileValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.StateOfChargeProfileValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.StateOfChargeProfileValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.StateOfChargeProfileValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    statesOfChargeList: jspb.Message.toObjectList(msg.getStatesOfChargeList(),
    proto.proto.StateOfCharge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.StateOfChargeProfileValue}
 */
proto.proto.StateOfChargeProfileValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.StateOfChargeProfileValue;
  return proto.proto.StateOfChargeProfileValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.StateOfChargeProfileValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.StateOfChargeProfileValue}
 */
proto.proto.StateOfChargeProfileValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.StateOfCharge;
      reader.readMessage(value,proto.proto.StateOfCharge.deserializeBinaryFromReader);
      msg.addStatesOfCharge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.StateOfChargeProfileValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.StateOfChargeProfileValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.StateOfChargeProfileValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.StateOfChargeProfileValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatesOfChargeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.StateOfCharge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StateOfCharge states_of_charge = 1;
 * @return {!Array<!proto.proto.StateOfCharge>}
 */
proto.proto.StateOfChargeProfileValue.prototype.getStatesOfChargeList = function() {
  return /** @type{!Array<!proto.proto.StateOfCharge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.StateOfCharge, 1));
};


/**
 * @param {!Array<!proto.proto.StateOfCharge>} value
 * @return {!proto.proto.StateOfChargeProfileValue} returns this
*/
proto.proto.StateOfChargeProfileValue.prototype.setStatesOfChargeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.StateOfCharge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.StateOfCharge}
 */
proto.proto.StateOfChargeProfileValue.prototype.addStatesOfCharge = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.StateOfCharge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.StateOfChargeProfileValue} returns this
 */
proto.proto.StateOfChargeProfileValue.prototype.clearStatesOfChargeList = function() {
  return this.setStatesOfChargeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.StateOfCharge.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.StateOfCharge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.StateOfCharge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.StateOfCharge.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestampInS: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stateOfCharge: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.StateOfCharge}
 */
proto.proto.StateOfCharge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.StateOfCharge;
  return proto.proto.StateOfCharge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.StateOfCharge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.StateOfCharge}
 */
proto.proto.StateOfCharge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampInS(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStateOfCharge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.StateOfCharge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.StateOfCharge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.StateOfCharge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.StateOfCharge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestampInS();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStateOfCharge();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 timestamp_in_s = 1;
 * @return {number}
 */
proto.proto.StateOfCharge.prototype.getTimestampInS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.StateOfCharge} returns this
 */
proto.proto.StateOfCharge.prototype.setTimestampInS = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 state_of_charge = 2;
 * @return {number}
 */
proto.proto.StateOfCharge.prototype.getStateOfCharge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.StateOfCharge} returns this
 */
proto.proto.StateOfCharge.prototype.setStateOfCharge = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VEPUpdatesByVIN.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VEPUpdatesByVIN.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VEPUpdatesByVIN} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VEPUpdatesByVIN.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatesMap: (f = msg.getUpdatesMap()) ? f.toObject(includeInstance, proto.proto.VEPUpdate.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VEPUpdatesByVIN}
 */
proto.proto.VEPUpdatesByVIN.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VEPUpdatesByVIN;
  return proto.proto.VEPUpdatesByVIN.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VEPUpdatesByVIN} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VEPUpdatesByVIN}
 */
proto.proto.VEPUpdatesByVIN.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 1:
      var value = msg.getUpdatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.proto.VEPUpdate.deserializeBinaryFromReader, "", new proto.proto.VEPUpdate());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VEPUpdatesByVIN.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VEPUpdatesByVIN.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VEPUpdatesByVIN} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VEPUpdatesByVIN.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUpdatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.proto.VEPUpdate.serializeBinaryToWriter);
  }
};


/**
 * optional int32 sequence_number = 2;
 * @return {number}
 */
proto.proto.VEPUpdatesByVIN.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VEPUpdatesByVIN} returns this
 */
proto.proto.VEPUpdatesByVIN.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<string, VEPUpdate> updates = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.proto.VEPUpdate>}
 */
proto.proto.VEPUpdatesByVIN.prototype.getUpdatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.proto.VEPUpdate>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.proto.VEPUpdate));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.VEPUpdatesByVIN} returns this
 */
proto.proto.VEPUpdatesByVIN.prototype.clearUpdatesMap = function() {
  this.getUpdatesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.DebugMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.DebugMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.DebugMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.DebugMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.DebugMessage}
 */
proto.proto.DebugMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.DebugMessage;
  return proto.proto.DebugMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.DebugMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.DebugMessage}
 */
proto.proto.DebugMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.DebugMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.DebugMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.DebugMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.DebugMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.proto.DebugMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.DebugMessage} returns this
 */
proto.proto.DebugMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    vin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, proto.proto.VehicleAttributeStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleStatus}
 */
proto.proto.VehicleStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleStatus;
  return proto.proto.VehicleStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleStatus}
 */
proto.proto.VehicleStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    case 2:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.proto.VehicleAttributeStatus.deserializeBinaryFromReader, "", new proto.proto.VehicleAttributeStatus());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.proto.VehicleAttributeStatus.serializeBinaryToWriter);
  }
};


/**
 * optional string vin = 1;
 * @return {string}
 */
proto.proto.VehicleStatus.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleStatus} returns this
 */
proto.proto.VehicleStatus.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, VehicleAttributeStatus> attributes = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.proto.VehicleAttributeStatus>}
 */
proto.proto.VehicleStatus.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.proto.VehicleAttributeStatus>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.proto.VehicleAttributeStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.VehicleStatus} returns this
 */
proto.proto.VehicleStatus.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.PushMessage.oneofGroups_ = [[1,2,3,9,13,10,14,11,12,15,16,17,18,19]];

/**
 * @enum {number}
 */
proto.proto.PushMessage.MsgCase = {
  MSG_NOT_SET: 0,
  VEPUPDATE: 1,
  VEPUPDATES: 2,
  DEBUGMESSAGE: 3,
  SERVICE_STATUS_UPDATES: 9,
  SERVICE_STATUS_UPDATE: 13,
  USER_DATA_UPDATE: 10,
  USER_VEHICLE_AUTH_CHANGED_UPDATE: 14,
  USER_PICTURE_UPDATE: 11,
  USER_PIN_UPDATE: 12,
  VEHICLE_UPDATED: 15,
  PREFERRED_DEALER_CHANGE: 16,
  APPTWIN_COMMAND_STATUS_UPDATES_BY_VIN: 17,
  APPTWIN_PENDING_COMMAND_REQUEST: 18,
  ASSIGNED_VEHICLES: 19
};

/**
 * @return {proto.proto.PushMessage.MsgCase}
 */
proto.proto.PushMessage.prototype.getMsgCase = function() {
  return /** @type {proto.proto.PushMessage.MsgCase} */(jspb.Message.computeOneofCase(this, proto.proto.PushMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PushMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PushMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PushMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PushMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    trackingId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    vepupdate: (f = msg.getVepupdate()) && proto.proto.VEPUpdate.toObject(includeInstance, f),
    vepupdates: (f = msg.getVepupdates()) && proto.proto.VEPUpdatesByVIN.toObject(includeInstance, f),
    debugmessage: (f = msg.getDebugmessage()) && proto.proto.DebugMessage.toObject(includeInstance, f),
    serviceStatusUpdates: (f = msg.getServiceStatusUpdates()) && service$activation_pb.ServiceStatusUpdatesByVIN.toObject(includeInstance, f),
    serviceStatusUpdate: (f = msg.getServiceStatusUpdate()) && service$activation_pb.ServiceStatusUpdate.toObject(includeInstance, f),
    userDataUpdate: (f = msg.getUserDataUpdate()) && user$events_pb.UserDataUpdate.toObject(includeInstance, f),
    userVehicleAuthChangedUpdate: (f = msg.getUserVehicleAuthChangedUpdate()) && user$events_pb.UserVehicleAuthChangedUpdate.toObject(includeInstance, f),
    userPictureUpdate: (f = msg.getUserPictureUpdate()) && user$events_pb.UserPictureUpdate.toObject(includeInstance, f),
    userPinUpdate: (f = msg.getUserPinUpdate()) && user$events_pb.UserPINUpdate.toObject(includeInstance, f),
    vehicleUpdated: (f = msg.getVehicleUpdated()) && proto.proto.VehicleUpdated.toObject(includeInstance, f),
    preferredDealerChange: (f = msg.getPreferredDealerChange()) && proto.proto.PreferredDealerChange.toObject(includeInstance, f),
    apptwinCommandStatusUpdatesByVin: (f = msg.getApptwinCommandStatusUpdatesByVin()) && vehicleapi_pb.AppTwinCommandStatusUpdatesByVIN.toObject(includeInstance, f),
    apptwinPendingCommandRequest: (f = msg.getApptwinPendingCommandRequest()) && vehicleapi_pb.AppTwinPendingCommandsRequest.toObject(includeInstance, f),
    assignedVehicles: (f = msg.getAssignedVehicles()) && protos_pb.AssignedVehicles.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PushMessage}
 */
proto.proto.PushMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PushMessage;
  return proto.proto.PushMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PushMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PushMessage}
 */
proto.proto.PushMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrackingId(value);
      break;
    case 1:
      var value = new proto.proto.VEPUpdate;
      reader.readMessage(value,proto.proto.VEPUpdate.deserializeBinaryFromReader);
      msg.setVepupdate(value);
      break;
    case 2:
      var value = new proto.proto.VEPUpdatesByVIN;
      reader.readMessage(value,proto.proto.VEPUpdatesByVIN.deserializeBinaryFromReader);
      msg.setVepupdates(value);
      break;
    case 3:
      var value = new proto.proto.DebugMessage;
      reader.readMessage(value,proto.proto.DebugMessage.deserializeBinaryFromReader);
      msg.setDebugmessage(value);
      break;
    case 9:
      var value = new service$activation_pb.ServiceStatusUpdatesByVIN;
      reader.readMessage(value,service$activation_pb.ServiceStatusUpdatesByVIN.deserializeBinaryFromReader);
      msg.setServiceStatusUpdates(value);
      break;
    case 13:
      var value = new service$activation_pb.ServiceStatusUpdate;
      reader.readMessage(value,service$activation_pb.ServiceStatusUpdate.deserializeBinaryFromReader);
      msg.setServiceStatusUpdate(value);
      break;
    case 10:
      var value = new user$events_pb.UserDataUpdate;
      reader.readMessage(value,user$events_pb.UserDataUpdate.deserializeBinaryFromReader);
      msg.setUserDataUpdate(value);
      break;
    case 14:
      var value = new user$events_pb.UserVehicleAuthChangedUpdate;
      reader.readMessage(value,user$events_pb.UserVehicleAuthChangedUpdate.deserializeBinaryFromReader);
      msg.setUserVehicleAuthChangedUpdate(value);
      break;
    case 11:
      var value = new user$events_pb.UserPictureUpdate;
      reader.readMessage(value,user$events_pb.UserPictureUpdate.deserializeBinaryFromReader);
      msg.setUserPictureUpdate(value);
      break;
    case 12:
      var value = new user$events_pb.UserPINUpdate;
      reader.readMessage(value,user$events_pb.UserPINUpdate.deserializeBinaryFromReader);
      msg.setUserPinUpdate(value);
      break;
    case 15:
      var value = new proto.proto.VehicleUpdated;
      reader.readMessage(value,proto.proto.VehicleUpdated.deserializeBinaryFromReader);
      msg.setVehicleUpdated(value);
      break;
    case 16:
      var value = new proto.proto.PreferredDealerChange;
      reader.readMessage(value,proto.proto.PreferredDealerChange.deserializeBinaryFromReader);
      msg.setPreferredDealerChange(value);
      break;
    case 17:
      var value = new vehicleapi_pb.AppTwinCommandStatusUpdatesByVIN;
      reader.readMessage(value,vehicleapi_pb.AppTwinCommandStatusUpdatesByVIN.deserializeBinaryFromReader);
      msg.setApptwinCommandStatusUpdatesByVin(value);
      break;
    case 18:
      var value = new vehicleapi_pb.AppTwinPendingCommandsRequest;
      reader.readMessage(value,vehicleapi_pb.AppTwinPendingCommandsRequest.deserializeBinaryFromReader);
      msg.setApptwinPendingCommandRequest(value);
      break;
    case 19:
      var value = new protos_pb.AssignedVehicles;
      reader.readMessage(value,protos_pb.AssignedVehicles.deserializeBinaryFromReader);
      msg.setAssignedVehicles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PushMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PushMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PushMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PushMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrackingId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVepupdate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.VEPUpdate.serializeBinaryToWriter
    );
  }
  f = message.getVepupdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.proto.VEPUpdatesByVIN.serializeBinaryToWriter
    );
  }
  f = message.getDebugmessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.proto.DebugMessage.serializeBinaryToWriter
    );
  }
  f = message.getServiceStatusUpdates();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      service$activation_pb.ServiceStatusUpdatesByVIN.serializeBinaryToWriter
    );
  }
  f = message.getServiceStatusUpdate();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      service$activation_pb.ServiceStatusUpdate.serializeBinaryToWriter
    );
  }
  f = message.getUserDataUpdate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      user$events_pb.UserDataUpdate.serializeBinaryToWriter
    );
  }
  f = message.getUserVehicleAuthChangedUpdate();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      user$events_pb.UserVehicleAuthChangedUpdate.serializeBinaryToWriter
    );
  }
  f = message.getUserPictureUpdate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      user$events_pb.UserPictureUpdate.serializeBinaryToWriter
    );
  }
  f = message.getUserPinUpdate();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      user$events_pb.UserPINUpdate.serializeBinaryToWriter
    );
  }
  f = message.getVehicleUpdated();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.proto.VehicleUpdated.serializeBinaryToWriter
    );
  }
  f = message.getPreferredDealerChange();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.proto.PreferredDealerChange.serializeBinaryToWriter
    );
  }
  f = message.getApptwinCommandStatusUpdatesByVin();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      vehicleapi_pb.AppTwinCommandStatusUpdatesByVIN.serializeBinaryToWriter
    );
  }
  f = message.getApptwinPendingCommandRequest();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      vehicleapi_pb.AppTwinPendingCommandsRequest.serializeBinaryToWriter
    );
  }
  f = message.getAssignedVehicles();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      protos_pb.AssignedVehicles.serializeBinaryToWriter
    );
  }
};


/**
 * optional string tracking_id = 5;
 * @return {string}
 */
proto.proto.PushMessage.prototype.getTrackingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.setTrackingId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional VEPUpdate vepUpdate = 1;
 * @return {?proto.proto.VEPUpdate}
 */
proto.proto.PushMessage.prototype.getVepupdate = function() {
  return /** @type{?proto.proto.VEPUpdate} */ (
    jspb.Message.getWrapperField(this, proto.proto.VEPUpdate, 1));
};


/**
 * @param {?proto.proto.VEPUpdate|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setVepupdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearVepupdate = function() {
  return this.setVepupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasVepupdate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VEPUpdatesByVIN vepUpdates = 2;
 * @return {?proto.proto.VEPUpdatesByVIN}
 */
proto.proto.PushMessage.prototype.getVepupdates = function() {
  return /** @type{?proto.proto.VEPUpdatesByVIN} */ (
    jspb.Message.getWrapperField(this, proto.proto.VEPUpdatesByVIN, 2));
};


/**
 * @param {?proto.proto.VEPUpdatesByVIN|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setVepupdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearVepupdates = function() {
  return this.setVepupdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasVepupdates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DebugMessage debugMessage = 3;
 * @return {?proto.proto.DebugMessage}
 */
proto.proto.PushMessage.prototype.getDebugmessage = function() {
  return /** @type{?proto.proto.DebugMessage} */ (
    jspb.Message.getWrapperField(this, proto.proto.DebugMessage, 3));
};


/**
 * @param {?proto.proto.DebugMessage|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setDebugmessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearDebugmessage = function() {
  return this.setDebugmessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasDebugmessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ServiceStatusUpdatesByVIN service_status_updates = 9;
 * @return {?proto.proto.ServiceStatusUpdatesByVIN}
 */
proto.proto.PushMessage.prototype.getServiceStatusUpdates = function() {
  return /** @type{?proto.proto.ServiceStatusUpdatesByVIN} */ (
    jspb.Message.getWrapperField(this, service$activation_pb.ServiceStatusUpdatesByVIN, 9));
};


/**
 * @param {?proto.proto.ServiceStatusUpdatesByVIN|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setServiceStatusUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearServiceStatusUpdates = function() {
  return this.setServiceStatusUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasServiceStatusUpdates = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ServiceStatusUpdate service_status_update = 13;
 * @return {?proto.proto.ServiceStatusUpdate}
 */
proto.proto.PushMessage.prototype.getServiceStatusUpdate = function() {
  return /** @type{?proto.proto.ServiceStatusUpdate} */ (
    jspb.Message.getWrapperField(this, service$activation_pb.ServiceStatusUpdate, 13));
};


/**
 * @param {?proto.proto.ServiceStatusUpdate|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setServiceStatusUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearServiceStatusUpdate = function() {
  return this.setServiceStatusUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasServiceStatusUpdate = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional UserDataUpdate user_data_update = 10;
 * @return {?proto.proto.UserDataUpdate}
 */
proto.proto.PushMessage.prototype.getUserDataUpdate = function() {
  return /** @type{?proto.proto.UserDataUpdate} */ (
    jspb.Message.getWrapperField(this, user$events_pb.UserDataUpdate, 10));
};


/**
 * @param {?proto.proto.UserDataUpdate|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setUserDataUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearUserDataUpdate = function() {
  return this.setUserDataUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasUserDataUpdate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional UserVehicleAuthChangedUpdate user_vehicle_auth_changed_update = 14;
 * @return {?proto.proto.UserVehicleAuthChangedUpdate}
 */
proto.proto.PushMessage.prototype.getUserVehicleAuthChangedUpdate = function() {
  return /** @type{?proto.proto.UserVehicleAuthChangedUpdate} */ (
    jspb.Message.getWrapperField(this, user$events_pb.UserVehicleAuthChangedUpdate, 14));
};


/**
 * @param {?proto.proto.UserVehicleAuthChangedUpdate|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setUserVehicleAuthChangedUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearUserVehicleAuthChangedUpdate = function() {
  return this.setUserVehicleAuthChangedUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasUserVehicleAuthChangedUpdate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional UserPictureUpdate user_picture_update = 11;
 * @return {?proto.proto.UserPictureUpdate}
 */
proto.proto.PushMessage.prototype.getUserPictureUpdate = function() {
  return /** @type{?proto.proto.UserPictureUpdate} */ (
    jspb.Message.getWrapperField(this, user$events_pb.UserPictureUpdate, 11));
};


/**
 * @param {?proto.proto.UserPictureUpdate|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setUserPictureUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearUserPictureUpdate = function() {
  return this.setUserPictureUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasUserPictureUpdate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional UserPINUpdate user_pin_update = 12;
 * @return {?proto.proto.UserPINUpdate}
 */
proto.proto.PushMessage.prototype.getUserPinUpdate = function() {
  return /** @type{?proto.proto.UserPINUpdate} */ (
    jspb.Message.getWrapperField(this, user$events_pb.UserPINUpdate, 12));
};


/**
 * @param {?proto.proto.UserPINUpdate|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setUserPinUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearUserPinUpdate = function() {
  return this.setUserPinUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasUserPinUpdate = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional VehicleUpdated vehicle_updated = 15;
 * @return {?proto.proto.VehicleUpdated}
 */
proto.proto.PushMessage.prototype.getVehicleUpdated = function() {
  return /** @type{?proto.proto.VehicleUpdated} */ (
    jspb.Message.getWrapperField(this, proto.proto.VehicleUpdated, 15));
};


/**
 * @param {?proto.proto.VehicleUpdated|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setVehicleUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearVehicleUpdated = function() {
  return this.setVehicleUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasVehicleUpdated = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional PreferredDealerChange preferred_dealer_change = 16;
 * @return {?proto.proto.PreferredDealerChange}
 */
proto.proto.PushMessage.prototype.getPreferredDealerChange = function() {
  return /** @type{?proto.proto.PreferredDealerChange} */ (
    jspb.Message.getWrapperField(this, proto.proto.PreferredDealerChange, 16));
};


/**
 * @param {?proto.proto.PreferredDealerChange|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setPreferredDealerChange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearPreferredDealerChange = function() {
  return this.setPreferredDealerChange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasPreferredDealerChange = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional AppTwinCommandStatusUpdatesByVIN apptwin_command_status_updates_by_vin = 17;
 * @return {?proto.proto.AppTwinCommandStatusUpdatesByVIN}
 */
proto.proto.PushMessage.prototype.getApptwinCommandStatusUpdatesByVin = function() {
  return /** @type{?proto.proto.AppTwinCommandStatusUpdatesByVIN} */ (
    jspb.Message.getWrapperField(this, vehicleapi_pb.AppTwinCommandStatusUpdatesByVIN, 17));
};


/**
 * @param {?proto.proto.AppTwinCommandStatusUpdatesByVIN|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setApptwinCommandStatusUpdatesByVin = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearApptwinCommandStatusUpdatesByVin = function() {
  return this.setApptwinCommandStatusUpdatesByVin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasApptwinCommandStatusUpdatesByVin = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional AppTwinPendingCommandsRequest apptwin_pending_command_request = 18;
 * @return {?proto.proto.AppTwinPendingCommandsRequest}
 */
proto.proto.PushMessage.prototype.getApptwinPendingCommandRequest = function() {
  return /** @type{?proto.proto.AppTwinPendingCommandsRequest} */ (
    jspb.Message.getWrapperField(this, vehicleapi_pb.AppTwinPendingCommandsRequest, 18));
};


/**
 * @param {?proto.proto.AppTwinPendingCommandsRequest|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setApptwinPendingCommandRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearApptwinPendingCommandRequest = function() {
  return this.setApptwinPendingCommandRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasApptwinPendingCommandRequest = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional AssignedVehicles assigned_vehicles = 19;
 * @return {?proto.proto.AssignedVehicles}
 */
proto.proto.PushMessage.prototype.getAssignedVehicles = function() {
  return /** @type{?proto.proto.AssignedVehicles} */ (
    jspb.Message.getWrapperField(this, protos_pb.AssignedVehicles, 19));
};


/**
 * @param {?proto.proto.AssignedVehicles|undefined} value
 * @return {!proto.proto.PushMessage} returns this
*/
proto.proto.PushMessage.prototype.setAssignedVehicles = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.proto.PushMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.PushMessage} returns this
 */
proto.proto.PushMessage.prototype.clearAssignedVehicles = function() {
  return this.setAssignedVehicles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PushMessage.prototype.hasAssignedVehicles = function() {
  return jspb.Message.getField(this, 19) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.TrackingEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.TrackingEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.TrackingEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TrackingEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    trackingId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    eventType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    payloadMap: (f = msg.getPayloadMap()) ? f.toObject(includeInstance, proto.proto.PayloadValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.TrackingEvent}
 */
proto.proto.TrackingEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.TrackingEvent;
  return proto.proto.TrackingEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.TrackingEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.TrackingEvent}
 */
proto.proto.TrackingEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrackingId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 4:
      var value = msg.getPayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.proto.PayloadValue.deserializeBinaryFromReader, "", new proto.proto.PayloadValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.TrackingEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.TrackingEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.TrackingEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TrackingEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrackingId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.proto.PayloadValue.serializeBinaryToWriter);
  }
};


/**
 * optional string tracking_id = 1;
 * @return {string}
 */
proto.proto.TrackingEvent.prototype.getTrackingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.TrackingEvent} returns this
 */
proto.proto.TrackingEvent.prototype.setTrackingId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.proto.TrackingEvent.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.TrackingEvent} returns this
 */
proto.proto.TrackingEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string event_type = 3;
 * @return {string}
 */
proto.proto.TrackingEvent.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.TrackingEvent} returns this
 */
proto.proto.TrackingEvent.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, PayloadValue> payload = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.proto.PayloadValue>}
 */
proto.proto.TrackingEvent.prototype.getPayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.proto.PayloadValue>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.proto.PayloadValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.TrackingEvent} returns this
 */
proto.proto.TrackingEvent.prototype.clearPayloadMap = function() {
  this.getPayloadMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.PayloadValue.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.proto.PayloadValue.MsgCase = {
  MSG_NOT_SET: 0,
  STRING_VALUE: 1,
  INT_VALUE: 2,
  BOOL_VALUE: 3,
  DOUBLE_VALUE: 4
};

/**
 * @return {proto.proto.PayloadValue.MsgCase}
 */
proto.proto.PayloadValue.prototype.getMsgCase = function() {
  return /** @type {proto.proto.PayloadValue.MsgCase} */(jspb.Message.computeOneofCase(this, proto.proto.PayloadValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PayloadValue.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PayloadValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PayloadValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PayloadValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringValue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    intValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    boolValue: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PayloadValue}
 */
proto.proto.PayloadValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PayloadValue;
  return proto.proto.PayloadValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PayloadValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PayloadValue}
 */
proto.proto.PayloadValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PayloadValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PayloadValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PayloadValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PayloadValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string string_value = 1;
 * @return {string}
 */
proto.proto.PayloadValue.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.proto.PayloadValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 1, proto.proto.PayloadValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PayloadValue.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 int_value = 2;
 * @return {number}
 */
proto.proto.PayloadValue.prototype.getIntValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.setIntValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.proto.PayloadValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.clearIntValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.proto.PayloadValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PayloadValue.prototype.hasIntValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool bool_value = 3;
 * @return {boolean}
 */
proto.proto.PayloadValue.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.proto.PayloadValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.proto.PayloadValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PayloadValue.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double double_value = 4;
 * @return {number}
 */
proto.proto.PayloadValue.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.proto.PayloadValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.PayloadValue} returns this
 */
proto.proto.PayloadValue.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 4, proto.proto.PayloadValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.PayloadValue.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeVEPRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeVEPRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeVEPRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeVEPRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeVEPRequest}
 */
proto.proto.AcknowledgeVEPRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeVEPRequest;
  return proto.proto.AcknowledgeVEPRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeVEPRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeVEPRequest}
 */
proto.proto.AcknowledgeVEPRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeVEPRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeVEPRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeVEPRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeVEPRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeVEPRequest.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeVEPRequest} returns this
 */
proto.proto.AcknowledgeVEPRequest.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeVEPUpdatesByVIN.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeVEPUpdatesByVIN} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeVEPUpdatesByVIN}
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeVEPUpdatesByVIN;
  return proto.proto.AcknowledgeVEPUpdatesByVIN.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeVEPUpdatesByVIN} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeVEPUpdatesByVIN}
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeVEPUpdatesByVIN.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeVEPUpdatesByVIN} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeVEPUpdatesByVIN} returns this
 */
proto.proto.AcknowledgeVEPUpdatesByVIN.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ConfigurePingInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ConfigurePingInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ConfigurePingInterval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ConfigurePingInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    pingTimeMillis: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ConfigurePingInterval}
 */
proto.proto.ConfigurePingInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ConfigurePingInterval;
  return proto.proto.ConfigurePingInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ConfigurePingInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ConfigurePingInterval}
 */
proto.proto.ConfigurePingInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPingTimeMillis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ConfigurePingInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ConfigurePingInterval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ConfigurePingInterval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ConfigurePingInterval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPingTimeMillis();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ping_time_millis = 1;
 * @return {number}
 */
proto.proto.ConfigurePingInterval.prototype.getPingTimeMillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ConfigurePingInterval} returns this
 */
proto.proto.ConfigurePingInterval.prototype.setPingTimeMillis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeVehicleUpdated.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeVehicleUpdated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeVehicleUpdated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeVehicleUpdated.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeVehicleUpdated}
 */
proto.proto.AcknowledgeVehicleUpdated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeVehicleUpdated;
  return proto.proto.AcknowledgeVehicleUpdated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeVehicleUpdated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeVehicleUpdated}
 */
proto.proto.AcknowledgeVehicleUpdated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeVehicleUpdated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeVehicleUpdated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeVehicleUpdated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeVehicleUpdated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeVehicleUpdated.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeVehicleUpdated} returns this
 */
proto.proto.AcknowledgeVehicleUpdated.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgePreferredDealerChange.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgePreferredDealerChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgePreferredDealerChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgePreferredDealerChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgePreferredDealerChange}
 */
proto.proto.AcknowledgePreferredDealerChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgePreferredDealerChange;
  return proto.proto.AcknowledgePreferredDealerChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgePreferredDealerChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgePreferredDealerChange}
 */
proto.proto.AcknowledgePreferredDealerChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgePreferredDealerChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgePreferredDealerChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgePreferredDealerChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgePreferredDealerChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgePreferredDealerChange.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgePreferredDealerChange} returns this
 */
proto.proto.AcknowledgePreferredDealerChange.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.VehicleUpdated.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.VehicleUpdated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.VehicleUpdated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleUpdated.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ciamId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.VehicleUpdated}
 */
proto.proto.VehicleUpdated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.VehicleUpdated;
  return proto.proto.VehicleUpdated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.VehicleUpdated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.VehicleUpdated}
 */
proto.proto.VehicleUpdated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.VehicleUpdated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.VehicleUpdated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.VehicleUpdated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.VehicleUpdated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.VehicleUpdated.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleUpdated} returns this
 */
proto.proto.VehicleUpdated.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ciam_id = 2;
 * @return {string}
 */
proto.proto.VehicleUpdated.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleUpdated} returns this
 */
proto.proto.VehicleUpdated.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string vin = 3;
 * @return {string}
 */
proto.proto.VehicleUpdated.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.VehicleUpdated} returns this
 */
proto.proto.VehicleUpdated.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 10;
 * @return {number}
 */
proto.proto.VehicleUpdated.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.VehicleUpdated} returns this
 */
proto.proto.VehicleUpdated.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.PreferredDealerChange.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.PreferredDealerChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.PreferredDealerChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PreferredDealerChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ciamId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.PreferredDealerChange}
 */
proto.proto.PreferredDealerChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.PreferredDealerChange;
  return proto.proto.PreferredDealerChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.PreferredDealerChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.PreferredDealerChange}
 */
proto.proto.PreferredDealerChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.PreferredDealerChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.PreferredDealerChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.PreferredDealerChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.PreferredDealerChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.PreferredDealerChange.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.PreferredDealerChange} returns this
 */
proto.proto.PreferredDealerChange.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ciam_id = 2;
 * @return {string}
 */
proto.proto.PreferredDealerChange.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.PreferredDealerChange} returns this
 */
proto.proto.PreferredDealerChange.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string vin = 3;
 * @return {string}
 */
proto.proto.PreferredDealerChange.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.PreferredDealerChange} returns this
 */
proto.proto.PreferredDealerChange.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 10;
 * @return {number}
 */
proto.proto.PreferredDealerChange.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.PreferredDealerChange} returns this
 */
proto.proto.PreferredDealerChange.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * @enum {number}
 */
proto.proto.ChargeProgram = {
  DEFAULT_CHARGE_PROGRAM: 0,
  INSTANT_CHARGE_PROGRAM: 1,
  HOME_CHARGE_PROGRAM: 2,
  WORK_CHARGE_PROGRAM: 3
};

/**
 * @enum {number}
 */
proto.proto.AttributeStatus = {
  VALUE_VALID: 0,
  VALUE_NOT_RECEIVED: 1,
  VALUE_INVALID: 3,
  VALUE_NOT_AVAILABLE: 4
};

goog.object.extend(exports, proto.proto);
