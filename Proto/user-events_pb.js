// source: user-events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI', null, global);
goog.exportSymbol('proto.proto.AcknowledgeUpdateUserJWTRequest', null, global);
goog.exportSymbol('proto.proto.AcknowledgeUserDataUpdate', null, global);
goog.exportSymbol('proto.proto.AcknowledgeUserPINUpdate', null, global);
goog.exportSymbol('proto.proto.AcknowledgeUserPictureUpdate', null, global);
goog.exportSymbol('proto.proto.AcknowledgeUserVehicleAuthChangedUpdate', null, global);
goog.exportSymbol('proto.proto.CPDUserAddress', null, global);
goog.exportSymbol('proto.proto.CPDUserCommunicationPreference', null, global);
goog.exportSymbol('proto.proto.CPDUserData', null, global);
goog.exportSymbol('proto.proto.UpdateUserJWTRequest', null, global);
goog.exportSymbol('proto.proto.UserDataUpdate', null, global);
goog.exportSymbol('proto.proto.UserPINUpdate', null, global);
goog.exportSymbol('proto.proto.UserPictureUpdate', null, global);
goog.exportSymbol('proto.proto.UserVehicleAuthChangedUpdate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeUserDataUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeUserDataUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeUserDataUpdate.displayName = 'proto.proto.AcknowledgeUserDataUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserDataUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserDataUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserDataUpdate.displayName = 'proto.proto.UserDataUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeUserVehicleAuthChangedUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.displayName = 'proto.proto.AcknowledgeUserVehicleAuthChangedUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.displayName = 'proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserVehicleAuthChangedUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserVehicleAuthChangedUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserVehicleAuthChangedUpdate.displayName = 'proto.proto.UserVehicleAuthChangedUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CPDUserData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.CPDUserData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CPDUserData.displayName = 'proto.proto.CPDUserData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CPDUserAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.CPDUserAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CPDUserAddress.displayName = 'proto.proto.CPDUserAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CPDUserCommunicationPreference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.CPDUserCommunicationPreference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CPDUserCommunicationPreference.displayName = 'proto.proto.CPDUserCommunicationPreference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeUserPictureUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeUserPictureUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeUserPictureUpdate.displayName = 'proto.proto.AcknowledgeUserPictureUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserPictureUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserPictureUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserPictureUpdate.displayName = 'proto.proto.UserPictureUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeUserPINUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeUserPINUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeUserPINUpdate.displayName = 'proto.proto.AcknowledgeUserPINUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserPINUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserPINUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserPINUpdate.displayName = 'proto.proto.UserPINUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UpdateUserJWTRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UpdateUserJWTRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UpdateUserJWTRequest.displayName = 'proto.proto.UpdateUserJWTRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeUpdateUserJWTRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeUpdateUserJWTRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeUpdateUserJWTRequest.displayName = 'proto.proto.AcknowledgeUpdateUserJWTRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeUserDataUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeUserDataUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeUserDataUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserDataUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeUserDataUpdate}
 */
proto.proto.AcknowledgeUserDataUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeUserDataUpdate;
  return proto.proto.AcknowledgeUserDataUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeUserDataUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeUserDataUpdate}
 */
proto.proto.AcknowledgeUserDataUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeUserDataUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeUserDataUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeUserDataUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserDataUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeUserDataUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeUserDataUpdate} returns this
 */
proto.proto.AcknowledgeUserDataUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserDataUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserDataUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserDataUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserDataUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ciamId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emitTimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 8, 0),
    oldData: (f = msg.getOldData()) && proto.proto.CPDUserData.toObject(includeInstance, f),
    newData: (f = msg.getNewData()) && proto.proto.CPDUserData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserDataUpdate}
 */
proto.proto.UserDataUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserDataUpdate;
  return proto.proto.UserDataUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserDataUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserDataUpdate}
 */
proto.proto.UserDataUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestamp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    case 6:
      var value = new proto.proto.CPDUserData;
      reader.readMessage(value,proto.proto.CPDUserData.deserializeBinaryFromReader);
      msg.setOldData(value);
      break;
    case 7:
      var value = new proto.proto.CPDUserData;
      reader.readMessage(value,proto.proto.CPDUserData.deserializeBinaryFromReader);
      msg.setNewData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserDataUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserDataUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserDataUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserDataUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmitTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getOldData();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.proto.CPDUserData.serializeBinaryToWriter
    );
  }
  f = message.getNewData();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.proto.CPDUserData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.UserDataUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserDataUpdate} returns this
 */
proto.proto.UserDataUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ciam_id = 2;
 * @return {string}
 */
proto.proto.UserDataUpdate.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserDataUpdate} returns this
 */
proto.proto.UserDataUpdate.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 emit_timestamp = 3;
 * @return {number}
 */
proto.proto.UserDataUpdate.prototype.getEmitTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserDataUpdate} returns this
 */
proto.proto.UserDataUpdate.prototype.setEmitTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 8;
 * @return {number}
 */
proto.proto.UserDataUpdate.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserDataUpdate} returns this
 */
proto.proto.UserDataUpdate.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional CPDUserData old_data = 6;
 * @return {?proto.proto.CPDUserData}
 */
proto.proto.UserDataUpdate.prototype.getOldData = function() {
  return /** @type{?proto.proto.CPDUserData} */ (
    jspb.Message.getWrapperField(this, proto.proto.CPDUserData, 6));
};


/**
 * @param {?proto.proto.CPDUserData|undefined} value
 * @return {!proto.proto.UserDataUpdate} returns this
*/
proto.proto.UserDataUpdate.prototype.setOldData = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.UserDataUpdate} returns this
 */
proto.proto.UserDataUpdate.prototype.clearOldData = function() {
  return this.setOldData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.UserDataUpdate.prototype.hasOldData = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CPDUserData new_data = 7;
 * @return {?proto.proto.CPDUserData}
 */
proto.proto.UserDataUpdate.prototype.getNewData = function() {
  return /** @type{?proto.proto.CPDUserData} */ (
    jspb.Message.getWrapperField(this, proto.proto.CPDUserData, 7));
};


/**
 * @param {?proto.proto.CPDUserData|undefined} value
 * @return {!proto.proto.UserDataUpdate} returns this
*/
proto.proto.UserDataUpdate.prototype.setNewData = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.UserDataUpdate} returns this
 */
proto.proto.UserDataUpdate.prototype.clearNewData = function() {
  return this.setNewData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.UserDataUpdate.prototype.hasNewData = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeUserVehicleAuthChangedUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeUserVehicleAuthChangedUpdate}
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeUserVehicleAuthChangedUpdate;
  return proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeUserVehicleAuthChangedUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeUserVehicleAuthChangedUpdate}
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeUserVehicleAuthChangedUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeUserVehicleAuthChangedUpdate} returns this
 */
proto.proto.AcknowledgeUserVehicleAuthChangedUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI}
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI;
  return proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI}
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI} returns this
 */
proto.proto.AcknowledgeAbilityToGetVehicleMasterDataFromRestAPI.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserVehicleAuthChangedUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserVehicleAuthChangedUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserVehicleAuthChangedUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ciamId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emitTimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserVehicleAuthChangedUpdate}
 */
proto.proto.UserVehicleAuthChangedUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserVehicleAuthChangedUpdate;
  return proto.proto.UserVehicleAuthChangedUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserVehicleAuthChangedUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserVehicleAuthChangedUpdate}
 */
proto.proto.UserVehicleAuthChangedUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestamp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserVehicleAuthChangedUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserVehicleAuthChangedUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserVehicleAuthChangedUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmitTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserVehicleAuthChangedUpdate} returns this
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ciam_id = 2;
 * @return {string}
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserVehicleAuthChangedUpdate} returns this
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 emit_timestamp = 3;
 * @return {number}
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.getEmitTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserVehicleAuthChangedUpdate} returns this
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.setEmitTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 8;
 * @return {number}
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserVehicleAuthChangedUpdate} returns this
 */
proto.proto.UserVehicleAuthChangedUpdate.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CPDUserData.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CPDUserData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CPDUserData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CPDUserData.toObject = function(includeInstance, msg) {
  var f, obj = {
    ciamId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastName1: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastName2: jspb.Message.getFieldWithDefault(msg, 5, ""),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    namePrefix: jspb.Message.getFieldWithDefault(msg, 7, ""),
    middleInitial: jspb.Message.getFieldWithDefault(msg, 8, ""),
    salutationCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    email: jspb.Message.getFieldWithDefault(msg, 10, ""),
    landlinePhone: jspb.Message.getFieldWithDefault(msg, 11, ""),
    mobilePhoneNumber: jspb.Message.getFieldWithDefault(msg, 12, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 13, ""),
    createdBy: jspb.Message.getFieldWithDefault(msg, 14, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 15, ""),
    birthday: jspb.Message.getFieldWithDefault(msg, 28, ""),
    preferredLanguageCode: jspb.Message.getFieldWithDefault(msg, 29, ""),
    accountCountryCode: jspb.Message.getFieldWithDefault(msg, 30, ""),
    ucId: jspb.Message.getFieldWithDefault(msg, 31, ""),
    vip: jspb.Message.getBooleanFieldWithDefault(msg, 32, false),
    address: (f = msg.getAddress()) && proto.proto.CPDUserAddress.toObject(includeInstance, f),
    communicationPreference: (f = msg.getCommunicationPreference()) && proto.proto.CPDUserCommunicationPreference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CPDUserData}
 */
proto.proto.CPDUserData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CPDUserData;
  return proto.proto.CPDUserData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CPDUserData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CPDUserData}
 */
proto.proto.CPDUserData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName1(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName2(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamePrefix(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddleInitial(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSalutationCode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLandlinePhone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilePhoneNumber(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirthday(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredLanguageCode(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountCountryCode(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setUcId(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVip(value);
      break;
    case 33:
      var value = new proto.proto.CPDUserAddress;
      reader.readMessage(value,proto.proto.CPDUserAddress.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 34:
      var value = new proto.proto.CPDUserCommunicationPreference;
      reader.readMessage(value,proto.proto.CPDUserCommunicationPreference.deserializeBinaryFromReader);
      msg.setCommunicationPreference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CPDUserData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CPDUserData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CPDUserData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CPDUserData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastName1();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastName2();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNamePrefix();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMiddleInitial();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSalutationCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLandlinePhone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMobilePhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getBirthday();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getPreferredLanguageCode();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getAccountCountryCode();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getUcId();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getVip();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.proto.CPDUserAddress.serializeBinaryToWriter
    );
  }
  f = message.getCommunicationPreference();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.proto.CPDUserCommunicationPreference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ciam_id = 1;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string first_name = 3;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string last_name1 = 4;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getLastName1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setLastName1 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string last_name2 = 5;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getLastName2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setLastName2 = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name_prefix = 7;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getNamePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setNamePrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string middle_initial = 8;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getMiddleInitial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setMiddleInitial = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string salutation_code = 9;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getSalutationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setSalutationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string email = 10;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string landline_phone = 11;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getLandlinePhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setLandlinePhone = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string mobile_phone_number = 12;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getMobilePhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setMobilePhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string created_at = 13;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string created_by = 14;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string updated_at = 15;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string birthday = 28;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getBirthday = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setBirthday = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string preferred_language_code = 29;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getPreferredLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setPreferredLanguageCode = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string account_country_code = 30;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getAccountCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setAccountCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string uc_id = 31;
 * @return {string}
 */
proto.proto.CPDUserData.prototype.getUcId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setUcId = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional bool vip = 32;
 * @return {boolean}
 */
proto.proto.CPDUserData.prototype.getVip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.setVip = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};


/**
 * optional CPDUserAddress address = 33;
 * @return {?proto.proto.CPDUserAddress}
 */
proto.proto.CPDUserData.prototype.getAddress = function() {
  return /** @type{?proto.proto.CPDUserAddress} */ (
    jspb.Message.getWrapperField(this, proto.proto.CPDUserAddress, 33));
};


/**
 * @param {?proto.proto.CPDUserAddress|undefined} value
 * @return {!proto.proto.CPDUserData} returns this
*/
proto.proto.CPDUserData.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.CPDUserData.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional CPDUserCommunicationPreference communication_preference = 34;
 * @return {?proto.proto.CPDUserCommunicationPreference}
 */
proto.proto.CPDUserData.prototype.getCommunicationPreference = function() {
  return /** @type{?proto.proto.CPDUserCommunicationPreference} */ (
    jspb.Message.getWrapperField(this, proto.proto.CPDUserCommunicationPreference, 34));
};


/**
 * @param {?proto.proto.CPDUserCommunicationPreference|undefined} value
 * @return {!proto.proto.CPDUserData} returns this
*/
proto.proto.CPDUserData.prototype.setCommunicationPreference = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.CPDUserData} returns this
 */
proto.proto.CPDUserData.prototype.clearCommunicationPreference = function() {
  return this.setCommunicationPreference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.CPDUserData.prototype.hasCommunicationPreference = function() {
  return jspb.Message.getField(this, 34) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CPDUserAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CPDUserAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CPDUserAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CPDUserAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, ""),
    province: jspb.Message.getFieldWithDefault(msg, 3, ""),
    street: jspb.Message.getFieldWithDefault(msg, 4, ""),
    houseNo: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zipCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    city: jspb.Message.getFieldWithDefault(msg, 7, ""),
    streetType: jspb.Message.getFieldWithDefault(msg, 8, ""),
    houseName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    floorNo: jspb.Message.getFieldWithDefault(msg, 10, ""),
    doorNo: jspb.Message.getFieldWithDefault(msg, 11, ""),
    addressLine1: jspb.Message.getFieldWithDefault(msg, 12, ""),
    addressLine2: jspb.Message.getFieldWithDefault(msg, 13, ""),
    addressLine3: jspb.Message.getFieldWithDefault(msg, 14, ""),
    postOfficeBox: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CPDUserAddress}
 */
proto.proto.CPDUserAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CPDUserAddress;
  return proto.proto.CPDUserAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CPDUserAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CPDUserAddress}
 */
proto.proto.CPDUserAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreet(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseNo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipCode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloorNo(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDoorNo(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressLine1(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressLine2(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressLine3(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostOfficeBox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CPDUserAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CPDUserAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CPDUserAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CPDUserAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStreet();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHouseNo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZipCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStreetType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHouseName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFloorNo();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDoorNo();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAddressLine1();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAddressLine2();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAddressLine3();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getPostOfficeBox();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string country_code = 1;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string state = 2;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string province = 3;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string street = 4;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getStreet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setStreet = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string house_no = 5;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getHouseNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setHouseNo = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zip_code = 6;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getZipCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setZipCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string city = 7;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string street_type = 8;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getStreetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setStreetType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string house_name = 9;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getHouseName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setHouseName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string floor_no = 10;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getFloorNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setFloorNo = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string door_no = 11;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getDoorNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setDoorNo = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string address_line1 = 12;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getAddressLine1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setAddressLine1 = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string address_line2 = 13;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getAddressLine2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setAddressLine2 = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string address_line3 = 14;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getAddressLine3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setAddressLine3 = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string post_office_box = 15;
 * @return {string}
 */
proto.proto.CPDUserAddress.prototype.getPostOfficeBox = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CPDUserAddress} returns this
 */
proto.proto.CPDUserAddress.prototype.setPostOfficeBox = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CPDUserCommunicationPreference.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CPDUserCommunicationPreference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CPDUserCommunicationPreference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CPDUserCommunicationPreference.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactedByPhone: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    contactedByLetter: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    contactedByEmail: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    contactedBySms: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CPDUserCommunicationPreference}
 */
proto.proto.CPDUserCommunicationPreference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CPDUserCommunicationPreference;
  return proto.proto.CPDUserCommunicationPreference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CPDUserCommunicationPreference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CPDUserCommunicationPreference}
 */
proto.proto.CPDUserCommunicationPreference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContactedByPhone(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContactedByLetter(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContactedByEmail(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContactedBySms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CPDUserCommunicationPreference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CPDUserCommunicationPreference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CPDUserCommunicationPreference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CPDUserCommunicationPreference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactedByPhone();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getContactedByLetter();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getContactedByEmail();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getContactedBySms();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool contacted_by_phone = 1;
 * @return {boolean}
 */
proto.proto.CPDUserCommunicationPreference.prototype.getContactedByPhone = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.CPDUserCommunicationPreference} returns this
 */
proto.proto.CPDUserCommunicationPreference.prototype.setContactedByPhone = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool contacted_by_letter = 2;
 * @return {boolean}
 */
proto.proto.CPDUserCommunicationPreference.prototype.getContactedByLetter = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.CPDUserCommunicationPreference} returns this
 */
proto.proto.CPDUserCommunicationPreference.prototype.setContactedByLetter = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool contacted_by_email = 3;
 * @return {boolean}
 */
proto.proto.CPDUserCommunicationPreference.prototype.getContactedByEmail = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.CPDUserCommunicationPreference} returns this
 */
proto.proto.CPDUserCommunicationPreference.prototype.setContactedByEmail = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool contacted_by_sms = 4;
 * @return {boolean}
 */
proto.proto.CPDUserCommunicationPreference.prototype.getContactedBySms = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.CPDUserCommunicationPreference} returns this
 */
proto.proto.CPDUserCommunicationPreference.prototype.setContactedBySms = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeUserPictureUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeUserPictureUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeUserPictureUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserPictureUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeUserPictureUpdate}
 */
proto.proto.AcknowledgeUserPictureUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeUserPictureUpdate;
  return proto.proto.AcknowledgeUserPictureUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeUserPictureUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeUserPictureUpdate}
 */
proto.proto.AcknowledgeUserPictureUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeUserPictureUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeUserPictureUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeUserPictureUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserPictureUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeUserPictureUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeUserPictureUpdate} returns this
 */
proto.proto.AcknowledgeUserPictureUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserPictureUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserPictureUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserPictureUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserPictureUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ciamId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    emitTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    eventhubReceiveTimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    apptwinReceiveTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserPictureUpdate}
 */
proto.proto.UserPictureUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserPictureUpdate;
  return proto.proto.UserPictureUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserPictureUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserPictureUpdate}
 */
proto.proto.UserPictureUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventhubReceiveTimestamp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApptwinReceiveTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserPictureUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserPictureUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserPictureUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserPictureUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmitTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEventhubReceiveTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getApptwinReceiveTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.UserPictureUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPictureUpdate} returns this
 */
proto.proto.UserPictureUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ciam_id = 5;
 * @return {string}
 */
proto.proto.UserPictureUpdate.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserPictureUpdate} returns this
 */
proto.proto.UserPictureUpdate.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 emit_timestamp = 2;
 * @return {number}
 */
proto.proto.UserPictureUpdate.prototype.getEmitTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPictureUpdate} returns this
 */
proto.proto.UserPictureUpdate.prototype.setEmitTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 6;
 * @return {number}
 */
proto.proto.UserPictureUpdate.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPictureUpdate} returns this
 */
proto.proto.UserPictureUpdate.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 eventhub_receive_timestamp = 3;
 * @return {number}
 */
proto.proto.UserPictureUpdate.prototype.getEventhubReceiveTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPictureUpdate} returns this
 */
proto.proto.UserPictureUpdate.prototype.setEventhubReceiveTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 apptwin_receive_timestamp = 4;
 * @return {number}
 */
proto.proto.UserPictureUpdate.prototype.getApptwinReceiveTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPictureUpdate} returns this
 */
proto.proto.UserPictureUpdate.prototype.setApptwinReceiveTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeUserPINUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeUserPINUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeUserPINUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserPINUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeUserPINUpdate}
 */
proto.proto.AcknowledgeUserPINUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeUserPINUpdate;
  return proto.proto.AcknowledgeUserPINUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeUserPINUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeUserPINUpdate}
 */
proto.proto.AcknowledgeUserPINUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeUserPINUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeUserPINUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeUserPINUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUserPINUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeUserPINUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeUserPINUpdate} returns this
 */
proto.proto.AcknowledgeUserPINUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserPINUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserPINUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserPINUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserPINUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ciamId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    emitTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    eventhubReceiveTimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    apptwinReceiveTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserPINUpdate}
 */
proto.proto.UserPINUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserPINUpdate;
  return proto.proto.UserPINUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserPINUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserPINUpdate}
 */
proto.proto.UserPINUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventhubReceiveTimestamp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApptwinReceiveTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserPINUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserPINUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserPINUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserPINUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmitTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getEventhubReceiveTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getApptwinReceiveTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.UserPINUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPINUpdate} returns this
 */
proto.proto.UserPINUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ciam_id = 5;
 * @return {string}
 */
proto.proto.UserPINUpdate.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UserPINUpdate} returns this
 */
proto.proto.UserPINUpdate.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 emit_timestamp = 2;
 * @return {number}
 */
proto.proto.UserPINUpdate.prototype.getEmitTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPINUpdate} returns this
 */
proto.proto.UserPINUpdate.prototype.setEmitTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 6;
 * @return {number}
 */
proto.proto.UserPINUpdate.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPINUpdate} returns this
 */
proto.proto.UserPINUpdate.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 eventhub_receive_timestamp = 3;
 * @return {number}
 */
proto.proto.UserPINUpdate.prototype.getEventhubReceiveTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPINUpdate} returns this
 */
proto.proto.UserPINUpdate.prototype.setEventhubReceiveTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 apptwin_receive_timestamp = 4;
 * @return {number}
 */
proto.proto.UserPINUpdate.prototype.getApptwinReceiveTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.UserPINUpdate} returns this
 */
proto.proto.UserPINUpdate.prototype.setApptwinReceiveTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UpdateUserJWTRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UpdateUserJWTRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UpdateUserJWTRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateUserJWTRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    jwt: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UpdateUserJWTRequest}
 */
proto.proto.UpdateUserJWTRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UpdateUserJWTRequest;
  return proto.proto.UpdateUserJWTRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UpdateUserJWTRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UpdateUserJWTRequest}
 */
proto.proto.UpdateUserJWTRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UpdateUserJWTRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UpdateUserJWTRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UpdateUserJWTRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateUserJWTRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJwt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string jwt = 1;
 * @return {string}
 */
proto.proto.UpdateUserJWTRequest.prototype.getJwt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateUserJWTRequest} returns this
 */
proto.proto.UpdateUserJWTRequest.prototype.setJwt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeUpdateUserJWTRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeUpdateUserJWTRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeUpdateUserJWTRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUpdateUserJWTRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeUpdateUserJWTRequest}
 */
proto.proto.AcknowledgeUpdateUserJWTRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeUpdateUserJWTRequest;
  return proto.proto.AcknowledgeUpdateUserJWTRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeUpdateUserJWTRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeUpdateUserJWTRequest}
 */
proto.proto.AcknowledgeUpdateUserJWTRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeUpdateUserJWTRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeUpdateUserJWTRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeUpdateUserJWTRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeUpdateUserJWTRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.proto);
