// source: service-activation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.AcknowledgeServiceStatusUpdate', null, global);
goog.exportSymbol('proto.proto.AcknowledgeServiceStatusUpdatesByVIN', null, global);
goog.exportSymbol('proto.proto.ServiceStatus', null, global);
goog.exportSymbol('proto.proto.ServiceStatusUpdate', null, global);
goog.exportSymbol('proto.proto.ServiceStatusUpdatesByVIN', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeServiceStatusUpdatesByVIN, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeServiceStatusUpdatesByVIN.displayName = 'proto.proto.AcknowledgeServiceStatusUpdatesByVIN';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.AcknowledgeServiceStatusUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.AcknowledgeServiceStatusUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.AcknowledgeServiceStatusUpdate.displayName = 'proto.proto.AcknowledgeServiceStatusUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ServiceStatusUpdatesByVIN = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ServiceStatusUpdatesByVIN, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ServiceStatusUpdatesByVIN.displayName = 'proto.proto.ServiceStatusUpdatesByVIN';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ServiceStatusUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ServiceStatusUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ServiceStatusUpdate.displayName = 'proto.proto.ServiceStatusUpdate';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeServiceStatusUpdatesByVIN.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeServiceStatusUpdatesByVIN} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeServiceStatusUpdatesByVIN}
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeServiceStatusUpdatesByVIN;
  return proto.proto.AcknowledgeServiceStatusUpdatesByVIN.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeServiceStatusUpdatesByVIN} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeServiceStatusUpdatesByVIN}
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeServiceStatusUpdatesByVIN.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeServiceStatusUpdatesByVIN} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeServiceStatusUpdatesByVIN} returns this
 */
proto.proto.AcknowledgeServiceStatusUpdatesByVIN.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.AcknowledgeServiceStatusUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.AcknowledgeServiceStatusUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.AcknowledgeServiceStatusUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeServiceStatusUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.AcknowledgeServiceStatusUpdate}
 */
proto.proto.AcknowledgeServiceStatusUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.AcknowledgeServiceStatusUpdate;
  return proto.proto.AcknowledgeServiceStatusUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.AcknowledgeServiceStatusUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.AcknowledgeServiceStatusUpdate}
 */
proto.proto.AcknowledgeServiceStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.AcknowledgeServiceStatusUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.AcknowledgeServiceStatusUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.AcknowledgeServiceStatusUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.AcknowledgeServiceStatusUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.AcknowledgeServiceStatusUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.AcknowledgeServiceStatusUpdate} returns this
 */
proto.proto.AcknowledgeServiceStatusUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ServiceStatusUpdatesByVIN.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ServiceStatusUpdatesByVIN.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ServiceStatusUpdatesByVIN} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ServiceStatusUpdatesByVIN.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updatesMap: (f = msg.getUpdatesMap()) ? f.toObject(includeInstance, proto.proto.ServiceStatusUpdate.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ServiceStatusUpdatesByVIN}
 */
proto.proto.ServiceStatusUpdatesByVIN.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ServiceStatusUpdatesByVIN;
  return proto.proto.ServiceStatusUpdatesByVIN.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ServiceStatusUpdatesByVIN} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ServiceStatusUpdatesByVIN}
 */
proto.proto.ServiceStatusUpdatesByVIN.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 2:
      var value = msg.getUpdatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.proto.ServiceStatusUpdate.deserializeBinaryFromReader, "", new proto.proto.ServiceStatusUpdate());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ServiceStatusUpdatesByVIN.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ServiceStatusUpdatesByVIN.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ServiceStatusUpdatesByVIN} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ServiceStatusUpdatesByVIN.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUpdatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.proto.ServiceStatusUpdate.serializeBinaryToWriter);
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.ServiceStatusUpdatesByVIN.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ServiceStatusUpdatesByVIN} returns this
 */
proto.proto.ServiceStatusUpdatesByVIN.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, ServiceStatusUpdate> updates = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.proto.ServiceStatusUpdate>}
 */
proto.proto.ServiceStatusUpdatesByVIN.prototype.getUpdatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.proto.ServiceStatusUpdate>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.proto.ServiceStatusUpdate));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.ServiceStatusUpdatesByVIN} returns this
 */
proto.proto.ServiceStatusUpdatesByVIN.prototype.clearUpdatesMap = function() {
  this.getUpdatesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ServiceStatusUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ServiceStatusUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ServiceStatusUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ServiceStatusUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ciamId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    vin: jspb.Message.getFieldWithDefault(msg, 5, ""),
    emitTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    emitTimestampInMs: jspb.Message.getFieldWithDefault(msg, 8, 0),
    updatesMap: (f = msg.getUpdatesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ServiceStatusUpdate}
 */
proto.proto.ServiceStatusUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ServiceStatusUpdate;
  return proto.proto.ServiceStatusUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ServiceStatusUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ServiceStatusUpdate}
 */
proto.proto.ServiceStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCiamId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestamp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmitTimestampInMs(value);
      break;
    case 6:
      var value = msg.getUpdatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readEnum, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ServiceStatusUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ServiceStatusUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ServiceStatusUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ServiceStatusUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCiamId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getVin();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmitTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEmitTimestampInMs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getUpdatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeEnum);
  }
};


/**
 * optional int32 sequence_number = 1;
 * @return {number}
 */
proto.proto.ServiceStatusUpdate.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ServiceStatusUpdate} returns this
 */
proto.proto.ServiceStatusUpdate.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ciam_id = 7;
 * @return {string}
 */
proto.proto.ServiceStatusUpdate.prototype.getCiamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ServiceStatusUpdate} returns this
 */
proto.proto.ServiceStatusUpdate.prototype.setCiamId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string vin = 5;
 * @return {string}
 */
proto.proto.ServiceStatusUpdate.prototype.getVin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ServiceStatusUpdate} returns this
 */
proto.proto.ServiceStatusUpdate.prototype.setVin = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 emit_timestamp = 2;
 * @return {number}
 */
proto.proto.ServiceStatusUpdate.prototype.getEmitTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ServiceStatusUpdate} returns this
 */
proto.proto.ServiceStatusUpdate.prototype.setEmitTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 emit_timestamp_in_ms = 8;
 * @return {number}
 */
proto.proto.ServiceStatusUpdate.prototype.getEmitTimestampInMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ServiceStatusUpdate} returns this
 */
proto.proto.ServiceStatusUpdate.prototype.setEmitTimestampInMs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * map<int32, ServiceStatus> updates = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.proto.ServiceStatus>}
 */
proto.proto.ServiceStatusUpdate.prototype.getUpdatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.proto.ServiceStatus>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.proto.ServiceStatusUpdate} returns this
 */
proto.proto.ServiceStatusUpdate.prototype.clearUpdatesMap = function() {
  this.getUpdatesMap().clear();
  return this;};


/**
 * @enum {number}
 */
proto.proto.ServiceStatus = {
  SERVICE_STATUS_UNKNOWN: 0,
  SERVICE_STATUS_ACTIVE: 1,
  SERVICE_STATUS_INACTIVE: 2,
  SERVICE_STATUS_ACTIVATION_PENDING: 3,
  SERVICE_STATUS_DEACTIVATION_PENDING: 4
};

goog.object.extend(exports, proto.proto);
